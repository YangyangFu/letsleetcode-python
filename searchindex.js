Search.setIndex({"alltitles": {"0-1 N-Pack Problem": [[98, "n-pack-problem"]], "0001. Two Sum": [[19, "two-sum"]], "0003. Longest Substring without Repeating Characters": [[20, "longest-substring-without-repeating-characters"]], "0004. Median of Two Sorted Arrays": [[21, "median-of-two-sorted-arrays"]], "0005. Longest Palindromic String": [[22, "longest-palindromic-string"]], "0015. Three Sum": [[23, "three-sum"]], "0016. Three Sum Closest": [[24, "three-sum-closest"]], "0018. Four Sum": [[25, "four-sum"]], "0021 Merge Two Sorted Lists": [[26, "merge-two-sorted-lists"]], "0022 Generate Parentheses": [[27, "generate-parentheses"]], "0023 Merge k Sorted Lists": [[28, "merge-k-sorted-lists"]], "0026 Remove Duplicates": [[29, "remove-duplicates"]], "0027 Remove Element": [[30, "remove-element"]], "0048 Rotate Image": [[31, "rotate-image"]], "0054 Spiral Matrix": [[32, "spiral-matrix"]], "0056 Merge Intervals": [[33, "merge-intervals"]], "0059 Spiral Matrix II": [[34, "spiral-matrix-ii"]], "0076 Minimum Window Substring": [[35, "minimum-window-substring"]], "0083 Remove Duplicates From Sorted List": [[36, "remove-duplicates-from-sorted-list"]], "0086 Partition List": [[37, "partition-list"]], "0092. Reversed Linked List ii": [[38, "reversed-linked-list-ii"]], "0115 Distinct Subsequences": [[39, "distinct-subsequences"]], "0123 Best Time to Buy and Sell Stock III": [[40, "best-time-to-buy-and-sell-stock-iii"]], "0160 Intersection of Two Linked List": [[41, "intersection-of-two-linked-list"]], "0167. Two Sum II": [[42, "two-sum-ii"]], "0189. Rotate Array": [[43, "rotate-array"]], "0200. Number of islands": [[44, "number-of-islands"]], "0206. Reversed Linked List": [[45, "reversed-linked-list"]], "0207 Course Schedule": [[46, "course-schedule"]], "0226. Invert Binary Tree": [[47, "invert-binary-tree"]], "0236 Lowest Common Ancestor of a Binary Tree": [[48, "lowest-common-ancestor-of-a-binary-tree"]], "0279 Number Squares": [[49, "number-squares"]], "0300 Longest Increaseing Subsequence": [[50, "longest-increaseing-subsequence"]], "0303 Range Sum Query": [[51, "range-sum-query"]], "0304 Range Sum Query - 2D": [[52, "range-sum-query-2d"]], "0323 Number of Connected Component in an Undirected Graph": [[53, "number-of-connected-component-in-an-undirected-graph"]], "0344. Reverse String": [[54, "reverse-string"]], "0354 Russian Doll Envelope": [[55, "russian-doll-envelope"]], "0370 Range Addition": [[56, "range-addition"]], "0438 Find All Anagrams in a String": [[57, "find-all-anagrams-in-a-string"]], "0463. Island Perimeter": [[58, "island-perimeter"]], "0494 Target Sum": [[59, "target-sum"]], "0547 Number of Provinces": [[60, "number-of-provinces"]], "0567 Minimum Window Substring": [[61, "minimum-window-substring"]], "0652 Find Duplicate Subtrees": [[62, "find-duplicate-subtrees"]], "0695. Max Area of Island": [[63, "max-area-of-island"]], "0704. Binary Search": [[64, "binary-search"]], "0712 Minimum ASCII Delete Sum for Two Strings": [[65, "minimum-ascii-delete-sum-for-two-strings"]], "0713 Subarray with a product less than k": [[66, "subarray-with-a-product-less-than-k"]], "0733. Flood Fill": [[67, "flood-fill"]], "0733. Network Delay Time": [[68, "network-delay-time"]], "0797 All Paths From Source to Target": [[69, "all-paths-from-source-to-target"]], "0886 Possible Bipartition": [[70, "possible-bipartition"]], "1. Build": [[97, "build"]], "1. Longest Increasing Subsequence": [[87, "longest-increasing-subsequence"]], "1. Template": [[90, "template"]], "1027 Longest Arithmetic Subsequence": [[71, "longest-arithmetic-subsequence"]], "1109 Flight Booking": [[72, "flight-booking"]], "1288 Remove Covered Intervals": [[73, "remove-covered-intervals"]], "1514 Path With Maximum Probability": [[74, "path-with-maximum-probability"]], "1584 Min Cost to Connect All Points": [[75, "min-cost-to-connect-all-points"]], "1631 Path With Minimum Effort": [[76, "path-with-minimum-effort"]], "1976 Number of Ways to Arrive at Destination": [[77, "number-of-ways-to-arrive-at-destination"]], "2. Number of Longest Increasing Subsequence": [[87, "number-of-longest-increasing-subsequence"]], "2. Permutation": [[90, "permutation"]], "2. Traversal": [[97, "traversal"]], "2.1. Valid DAG": [[97, "valid-dag"]], "2.1.1. BFS": [[97, "bfs"]], "2.1.2. Depth-first Search": [[97, "depth-first-search"]], "2.2 Single Pair All Paths Problem": [[97, "single-pair-all-paths-problem"]], "2.2.1 BFS": [[97, "id1"]], "2.2.2 DFS": [[97, "dfs"]], "2.3 Topological Sorting": [[97, "topological-sorting"]], "2.3.1 DFS": [[97, "id2"]], "2.3.2 BFS": [[97, "id3"]], "3 Shortest Path Problems": [[97, "shortest-path-problems"]], "3. Longest Arithmetic Subsequence of Given Difference": [[87, "longest-arithmetic-subsequence-of-given-difference"]], "3. N-Queen Problem": [[90, "n-queen-problem"]], "3.1 BFS": [[97, "id4"]], "3.2 DFS": [[97, "id5"]], "4 Shortest Weighted Path": [[97, "shortest-weighted-path"]], "4. Longest Arithmetic Subsequence": [[87, "longest-arithmetic-subsequence"]], "5 Bipartition Graph": [[97, "bipartition-graph"]], "5. Russian Doll Envelopes": [[87, "russian-doll-envelopes"]], "5.1 BFS": [[97, "id6"]], "5.2 DFS": [[97, "id7"]], "6 Union Find": [[97, "union-find"]], "7 Minimum Spanning Tree": [[97, "minimum-spanning-tree"]], "7.1 Prim\u2019s Algorithm": [[97, "prim-s-algorithm"]], "7.2 Kruskal\u2019s Algorithm": [[97, "kruskal-s-algorithm"]], "8 Connectivity": [[97, "connectivity"]], "AVL Tree": [[7, "avl-tree"], [93, "avl-tree"]], "Abstract Data Type: Tree": [[6, "abstract-data-type-tree"]], "Adjancency-list Representation": [[9, "adjancency-list-representation"]], "Adjancency-matrix Representation": [[9, "adjancency-matrix-representation"]], "Algorithm": [[1, "algorithm"], [78, "algorithm"]], "Amortized Analysis": [[2, "amortized-analysis"]], "Analysis": [[19, "analysis"], [20, "analysis"], [21, "analysis"], [22, "analysis"], [23, "analysis"], [24, "analysis"], [25, "analysis"], [26, "analysis"], [27, "analysis"], [28, "analysis"], [29, "analysis"], [30, "analysis"], [31, "analysis"], [32, "analysis"], [33, "analysis"], [34, "analysis"], [35, "analysis"], [36, "analysis"], [37, "analysis"], [38, "analysis"], [39, "analysis"], [41, "analysis"], [42, "analysis"], [43, "analysis"], [44, "analysis"], [45, "analysis"], [46, "analysis"], [48, "analysis"], [51, "analysis"], [52, "analysis"], [53, "analysis"], [54, "analysis"], [56, "analysis"], [57, "analysis"], [58, "analysis"], [59, "analysis"], [60, "analysis"], [61, "analysis"], [62, "analysis"], [63, "analysis"], [64, "analysis"], [65, "analysis"], [67, "analysis"], [68, "analysis"], [72, "analysis"], [73, "analysis"], [74, "analysis"], [75, "analysis"], [76, "analysis"], [77, "analysis"], [88, "analysis"], [88, "id1"], [93, "analysis"], [93, "id1"]], "Application: Sequence -> Any Application???": [[6, "application-sequence-any-application"]], "Application: Set -> Binary Search Tree": [[6, "application-set-binary-search-tree"]], "Applications": [[93, "applications"]], "BFS": [[53, "bfs"], [81, "bfs"]], "BFS Solution": [[46, "bfs-solution"]], "Backtrack": [[59, "backtrack"]], "Backtracking": [[79, "backtracking"], [81, "backtracking"]], "Barrier Fucntion": [[15, "barrier-fucntion"]], "Bellman-Ford Algorithm": [[12, "bellman-ford-algorithm"]], "Big-O Complexity": [[80, "big-o-complexity"]], "Binary Search": [[83, "binary-search"], [87, "binary-search"]], "Binary Tree": [[6, "binary-tree"], [6, "id1"]], "Binary Tree to BST": [[93, "binary-tree-to-bst"]], "Breadth-First Search": [[9, "breadth-first-search"]], "Bubble Sort": [[84, "bubble-sort"]], "Build": [[91, "build"], [93, "build"], [94, "build"]], "Build All BST from Inorder Traversal": [[93, "build-all-bst-from-inorder-traversal"]], "Cahpter 5. Binary Tree": [[94, "cahpter-5-binary-tree"]], "Central Path": [[15, "central-path"]], "Chapter 1. Array and String": [[86, "chapter-1-array-and-string"]], "Chapter 11. Dynamic Programming III": [[88, "chapter-11-dynamic-programming-iii"]], "Chapter 12. Backtracking": [[90, "chapter-12-backtracking"]], "Chapter 2. Singely Linked List": [[91, "chapter-2-singely-linked-list"]], "Chapter 3. Stack": [[92, "chapter-3-stack"]], "Chapter 4. Binary Search Tree": [[93, "chapter-4-binary-search-tree"]], "Chapter 6. Binary Search Tree II": [[95, "chapter-6-binary-search-tree-ii"]], "Chapter 7: Binary Heap": [[96, "chapter-7-binary-heap"]], "Chapter 8. Graph": [[97, "chapter-8-graph"]], "Chapter 9. Dynamic Programming I": [[98, "chapter-9-dynamic-programming-i"]], "Check Palindrome": [[91, "check-palindrome"]], "Check for Blanced Parentheses": [[92, "check-for-blanced-parentheses"]], "Code Examples": [[79, "code-examples"]], "Coin Change": [[98, "coin-change"]], "Comparison Model based Sorting - Lower Bound Analysis": [[5, "comparison-model-based-sorting-lower-bound-analysis"]], "Complete Pack": [[98, "complete-pack"]], "Computing Height": [[7, "computing-height"]], "Connectivity": [[81, "connectivity"]], "Constant Time": [[80, "constant-time"]], "Constraint": [[33, "constraint"], [51, "constraint"], [52, "constraint"], [56, "constraint"], [59, "constraint"], [60, "constraint"], [65, "constraint"], [72, "constraint"], [73, "constraint"], [74, "constraint"], [75, "constraint"], [76, "constraint"], [77, "constraint"]], "Constraints": [[26, "constraints"], [27, "constraints"], [28, "constraints"], [29, "constraints"], [30, "constraints"], [31, "constraints"], [32, "constraints"], [34, "constraints"], [35, "constraints"], [36, "constraints"], [37, "constraints"], [41, "constraints"], [57, "constraints"], [61, "constraints"]], "Constraints:": [[19, "constraints"], [20, "constraints"], [21, "constraints"], [22, "constraints"], [23, "constraints"], [24, "constraints"], [25, "constraints"], [38, "constraints"], [42, "constraints"], [43, "constraints"], [44, "constraints"], [45, "constraints"], [46, "constraints"], [47, "constraints"], [54, "constraints"], [58, "constraints"], [63, "constraints"], [64, "constraints"], [67, "constraints"], [68, "constraints"], [69, "constraints"], [70, "constraints"], [71, "constraints"]], "Correctness": [[1, "correctness"]], "Counting Sort": [[5, "counting-sort"], [84, "counting-sort"]], "Cubic Time": [[80, "cubic-time"]], "Cycle Dection": [[91, "cycle-dection"]], "Cycle Entrance": [[91, "cycle-entrance"]], "DF Function with Memo": [[98, "df-function-with-memo"]], "DFS": [[10, "dfs"], [53, "dfs"], [81, "dfs"]], "DFS Solution": [[46, "dfs-solution"]], "DP Function": [[88, "dp-function"], [88, "id2"], [98, "dp-function"], [98, "id2"], [98, "id5"], [98, "id8"], [98, "id10"]], "DP Function with Memo": [[88, "dp-function-with-memo"], [98, "dp-function-with-memo"], [98, "id3"], [98, "id6"], [98, "id11"]], "DP Table": [[88, "id3"], [98, "dp-table"], [98, "id1"], [98, "id4"], [98, "id7"], [98, "id9"], [98, "id12"]], "DP Table with Space Optimization": [[98, "dp-table-with-space-optimization"]], "DP Tables": [[98, "dp-tables"]], "DP table": [[88, "dp-table"]], "Data Structure": [[85, "data-structure"]], "Data Structure vs Interfaces": [[2, "data-structure-vs-interfaces"]], "Delete Interval": [[89, "delete-interval"]], "Deletion": [[91, "deletion"], [93, "deletion"]], "Diff Array": [[86, "diff-array"]], "Dijkstra Algorithm": [[13, "dijkstra-algorithm"]], "Direct Access Array (DAA) Sorting": [[5, "direct-access-array-daa-sorting"]], "Dynamic Array Sequence": [[2, "dynamic-array-sequence"]], "Dynamic Operation": [[6, "dynamic-operation"]], "Dynamic Programming": [[59, "dynamic-programming"], [87, "dynamic-programming"]], "Dynamic Programming II": [[87, "dynamic-programming-ii"]], "Dynamic Programming IV": [[89, "dynamic-programming-iv"]], "Edit Distance": [[98, "edit-distance"]], "Efficiency": [[1, "efficiency"]], "Equality Constrained Minimization Problem": [[16, "equality-constrained-minimization-problem"]], "Examples": [[19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"]], "Exponential Time": [[80, "exponential-time"]], "Fast and Slow Pointer": [[86, "fast-and-slow-pointer"]], "Fibonacci Number": [[82, "fibonacci-number"], [98, "fibonacci-number"]], "Fibonacci Search": [[83, "fibonacci-search"]], "Follow-up": [[19, "follow-up"], [38, "follow-up"], [45, "follow-up"], [46, "follow-up"], [47, "follow-up"], [54, "follow-up"]], "Followup": [[35, "followup"], [43, "followup"], [57, "followup"], [61, "followup"]], "From Level Order Serialization": [[94, "from-level-order-serialization"]], "From Postorder and Inorder": [[94, "from-postorder-and-inorder"]], "From Preorder": [[93, "from-preorder"]], "From Preorder Serialization": [[94, "from-preorder-serialization"]], "From Preorder and Inorder": [[94, "from-preorder-and-inorder"]], "From Preorder and Postorder": [[94, "from-preorder-and-postorder"]], "Game Theory": [[88, "game-theory"]], "Graph Cycle": [[81, "graph-cycle"]], "Graph algorithm": [[81, "graph-algorithm"]], "Hashing": [[4, "hashing"]], "Heap Operations": [[8, "heap-operations"], [96, "heap-operations"]], "Heap Sort": [[8, "heap-sort"], [84, "heap-sort"], [96, "heap-sort"]], "Heaps": [[8, "heaps"], [96, "heaps"]], "Height Balance": [[7, "height-balance"]], "House Robber": [[88, "house-robber"]], "Implementation of Vertex/Edge Attributes": [[9, "implementation-of-vertex-edge-attributes"]], "Indexing": [[91, "indexing"]], "Inequality Constrained Minimization Problems": [[15, "inequality-constrained-minimization-problems"]], "Infix, Prefix, and Postfix Expression": [[92, "infix-prefix-and-postfix-expression"]], "Inorder": [[93, "inorder"], [94, "inorder"]], "Insertion": [[91, "insertion"], [93, "insertion"], [93, "id2"]], "Insertion Sort": [[3, "insertion-sort"], [84, "insertion-sort"]], "Interfaces": [[2, "interfaces"]], "Interior-point Method": [[15, "interior-point-method"]], "Intersection Node of Two Lists": [[91, "intersection-node-of-two-lists"]], "Intersection of Interval": [[89, "intersection-of-interval"]], "Intervals": [[89, "intervals"]], "Introduction": [[17, "introduction"], [82, "introduction"]], "Iterative Implementation": [[84, "iterative-implementation"]], "Lecture 10: Depth-First Search": [[10, "lecture-10-depth-first-search"]], "Lecture 11: Weighted Shortest Path": [[11, "lecture-11-weighted-shortest-path"]], "Lecture 12: The Bellman-Ford Algorithm": [[12, "lecture-12-the-bellman-ford-algorithm"]], "Lecture 13: The Dijkstra\u2019s Algorithm": [[13, "lecture-13-the-dijkstra-s-algorithm"]], "Lecture 1: Introduction": [[1, "lecture-1-introduction"]], "Lecture 2: Data Structure and Dynamic Array": [[2, "lecture-2-data-structure-and-dynamic-array"]], "Lecture 3: Set and Sorting": [[3, "lecture-3-set-and-sorting"]], "Lecture 5: Linear Sorting": [[5, "lecture-5-linear-sorting"]], "Lecture 6: Binary Trees - I": [[6, "lecture-6-binary-trees-i"]], "Lecture 7: Binary Trees - II": [[7, "lecture-7-binary-trees-ii"]], "Lecture 8: Binary Heap": [[8, "lecture-8-binary-heap"]], "Lecture 9: Breadth-First Search": [[9, "lecture-9-breadth-first-search"]], "Lectures": [[0, "lectures"]], "Left and Right Pointer": [[86, "left-and-right-pointer"]], "Length of Cycle": [[91, "length-of-cycle"]], "Level Order Traversal": [[93, "level-order-traversal"]], "Linear Search": [[83, "linear-search"]], "Linear Time": [[80, "linear-time"]], "Linked List": [[92, "linked-list"]], "Linked List Sequence": [[2, "linked-list-sequence"]], "Linked Structure for Binary Tree": [[6, "linked-structure-for-binary-tree"]], "List": [[92, "list"]], "Logarithmic Barrier Function": [[15, "logarithmic-barrier-function"]], "Logorithm Time": [[80, "logorithm-time"]], "Longest Common Subsequence": [[98, "longest-common-subsequence"]], "Longest Increasing Subsequence": [[98, "longest-increasing-subsequence"]], "Loops in Linked List": [[91, "loops-in-linked-list"]], "Lowest Common Ancestor": [[95, "lowest-common-ancestor"]], "Maximum/Minimum": [[82, "maximum-minimum"]], "Meeting Rooms": [[89, "meeting-rooms"]], "Memoization": [[98, "memoization"]], "Merge Interval": [[89, "merge-interval"]], "Merge Sort": [[3, "merge-sort"], [84, "merge-sort"]], "Merge/Divide Lists": [[91, "merge-divide-lists"]], "Method 1": [[93, "method-1"]], "Method 1: Double Linked List": [[92, "method-1-double-linked-list"]], "Method 2": [[93, "method-2"]], "Method 2: Use a standard stack and a deque": [[92, "method-2-use-a-standard-stack-and-a-deque"]], "Method 3": [[93, "method-3"]], "Method 4": [[93, "method-4"]], "Minimum Spanning Tree": [[81, "minimum-spanning-tree"]], "Minimum and Maximum": [[93, "minimum-and-maximum"]], "Model of Computation": [[1, "model-of-computation"]], "Modified KKT Conditions": [[15, "modified-kkt-conditions"]], "Naive Recursion": [[98, "naive-recursion"]], "Negative-weight edges": [[11, "negative-weight-edges"]], "Newton Decrement": [[16, "newton-decrement"]], "Newton Iterative Method": [[16, "newton-iterative-method"]], "Newton Step": [[16, "newton-step"]], "Next Greater Element in an array": [[92, "next-greater-element-in-an-array"]], "Non-overlapping Intervals": [[89, "non-overlapping-intervals"]], "Overview": [[10, "overview"], [11, "overview"], [12, "overview"], [13, "overview"], [14, "overview"]], "Permutation Sort": [[3, "permutation-sort"]], "Postorder": [[93, "postorder"]], "Preorder": [[94, "preorder"]], "Preorder Traversal": [[93, "preorder-traversal"]], "Presum Technique": [[86, "presum-technique"]], "Primal-dual Interior-point Method": [[15, "primal-dual-interior-point-method"]], "Priority Queue": [[8, "priority-queue"], [96, "priority-queue"]], "Problem": [[19, "problem"], [20, "problem"], [21, "problem"], [22, "problem"], [23, "problem"], [24, "problem"], [25, "problem"], [26, "problem"], [27, "problem"], [28, "problem"], [29, "problem"], [30, "problem"], [31, "problem"], [32, "problem"], [33, "problem"], [34, "problem"], [35, "problem"], [36, "problem"], [37, "problem"], [38, "problem"], [39, "problem"], [41, "problem"], [42, "problem"], [43, "problem"], [44, "problem"], [45, "problem"], [46, "problem"], [47, "problem"], [48, "problem"], [51, "problem"], [52, "problem"], [53, "problem"], [54, "problem"], [56, "problem"], [57, "problem"], [58, "problem"], [59, "problem"], [60, "problem"], [61, "problem"], [62, "problem"], [63, "problem"], [64, "problem"], [65, "problem"], [67, "problem"], [68, "problem"], [69, "problem"], [70, "problem"], [71, "problem"], [72, "problem"], [73, "problem"], [74, "problem"], [75, "problem"], [76, "problem"], [77, "problem"]], "Purpose": [[14, "purpose"]], "Python Implementation": [[6, "python-implementation"]], "Qudratic Time": [[80, "qudratic-time"]], "Quick Sort": [[84, "quick-sort"]], "Radix Sort": [[5, "radix-sort"]], "Recurrences": [[3, "recurrences"]], "Recursion": [[82, "recursion"]], "Recursive Implementation": [[84, "recursive-implementation"], [84, "id1"]], "Red-Black Tree": [[93, "red-black-tree"]], "Reference": [[90, "reference"]], "Relaxation": [[11, "relaxation"]], "Representing shortest paths": [[11, "representing-shortest-paths"]], "Resources": [[14, "resources"]], "Reverse Linked List": [[91, "reverse-linked-list"]], "Reverse a Stack": [[92, "reverse-a-stack"]], "Reverse the First N Nodes": [[91, "reverse-the-first-n-nodes"]], "Reverse the M to N nodes": [[91, "reverse-the-m-to-n-nodes"]], "Reverse the Whole List": [[91, "reverse-the-whole-list"]], "Review": [[5, "review"], [6, "review"], [7, "review"]], "Root Finding": [[16, "root-finding"]], "Rotate Matrix": [[86, "rotate-matrix"]], "Rotation": [[7, "rotation"]], "Rrepresentations of Graph": [[9, "rrepresentations-of-graph"]], "Russian Doll Envelopes": [[98, "russian-doll-envelopes"]], "Search": [[83, "search"], [91, "search"], [93, "search"]], "Search an element": [[93, "search-an-element"]], "Selection Sort": [[3, "selection-sort"], [84, "selection-sort"]], "Sell Stocks": [[88, "sell-stocks"]], "Serialization and Deserialization": [[93, "serialization-and-deserialization"]], "Serialization is a way to convert a binary tree to a standard format, which then can be used by external tools.": [[93, "serialization-is-a-way-to-convert-a-binary-tree-to-a-standard-format-which-then-can-be-used-by-external-tools"]], "Set Interface": [[3, "set-interface"]], "Shortest Path": [[9, "shortest-path"], [81, "shortest-path"]], "Single-source shortest paths in DAG (directed acyclic graphs)": [[11, "single-source-shortest-paths-in-dag-directed-acyclic-graphs"]], "Sliding Window": [[86, "sliding-window"]], "Solution": [[19, "solution"], [20, "solution"], [21, "solution"], [22, "solution"], [23, "solution"], [24, "solution"], [25, "solution"], [26, "solution"], [27, "solution"], [28, "solution"], [29, "solution"], [30, "solution"], [31, "solution"], [32, "solution"], [33, "solution"], [34, "solution"], [35, "solution"], [36, "solution"], [37, "solution"], [39, "solution"], [41, "solution"], [42, "solution"], [43, "solution"], [44, "solution"], [51, "solution"], [52, "solution"], [53, "solution"], [54, "solution"], [56, "solution"], [57, "solution"], [58, "solution"], [59, "solution"], [61, "solution"], [63, "solution"], [64, "solution"], [65, "solution"], [67, "solution"], [68, "solution"], [72, "solution"], [73, "solution"], [74, "solution"], [75, "solution"], [76, "solution"], [77, "solution"]], "Solution 1": [[45, "solution-1"]], "Solution 1:": [[46, "solution-1"]], "Solution 2": [[45, "solution-2"]], "Solutions": [[18, "solutions"]], "Some Cases": [[82, "some-cases"]], "Some Questionable Implementation": [[84, "some-questionable-implementation"]], "Sort": [[84, "sort"]], "Sort Linked List": [[91, "sort-linked-list"]], "Sorting": [[3, "sorting"]], "Special Stack": [[92, "special-stack"]], "Spiral Traverse": [[86, "spiral-traverse"]], "Stack in Python": [[92, "stack-in-python"]], "Standard Problems on Stack": [[92, "standard-problems-on-stack"]], "Static Array Sequence": [[2, "static-array-sequence"]], "Static Operation": [[6, "static-operation"]], "Stock Span Problem": [[92, "stock-span-problem"]], "Stopping Crietia": [[16, "stopping-crietia"]], "Sublist Search": [[83, "sublist-search"]], "Successor and Predecessor": [[93, "successor-and-predecessor"]], "Summary": [[3, "summary"]], "Terminology": [[6, "terminology"]], "Thoughts about traversal": [[95, "thoughts-about-traversal"]], "Thoughts on Serialization/Deserialization of Tree": [[95, "thoughts-on-serialization-deserialization-of-tree"]], "Tim Sort": [[84, "tim-sort"]], "Topologic Sorting": [[81, "topologic-sorting"]], "Topological Sort": [[10, "topological-sort"]], "Traversal": [[94, "traversal"]], "Traverse": [[91, "traverse"], [93, "traverse"]], "Traverse 2-D Matrix": [[86, "traverse-2-d-matrix"]], "Tree Map": [[93, "tree-map"]], "Tree Sort": [[84, "tree-sort"]], "Trees in Arrays": [[8, "trees-in-arrays"], [96, "trees-in-arrays"]], "Tuple Sort": [[5, "tuple-sort"]], "Two Pointer": [[86, "two-pointer"]], "Unconstrained Minimization Probelm": [[16, "unconstrained-minimization-probelm"]], "Union-Find": [[53, "union-find"]], "Valid BST": [[93, "valid-bst"]], "Variants": [[11, "variants"]], "Video Stitching": [[89, "video-stitching"]], "What is a cycle in Directed Graph?": [[46, "what-is-a-cycle-in-directed-graph"]], "collection.deque": [[92, "collection-deque"]], "examples": [[65, "examples"]], "n-log-n Time": [[80, "n-log-n-time"]], "queue.LifoQueue": [[92, "queue-lifoqueue"]]}, "docnames": ["basics/lectures", "basics/lectures/lecture01", "basics/lectures/lecture02", "basics/lectures/lecture03", "basics/lectures/lecture04", "basics/lectures/lecture05", "basics/lectures/lecture06", "basics/lectures/lecture07", "basics/lectures/lecture08", "basics/lectures/lecture09", "basics/lectures/lecture10", "basics/lectures/lecture11", "basics/lectures/lecture12", "basics/lectures/lecture13", "basics/overview", "convex-optimization/interior-point-method", "convex-optimization/newton-method", "intro", "leetcode/solutions", "leetcode/solutions/0001-two-sum", "leetcode/solutions/0003-longest-substring", "leetcode/solutions/0004-median-two-sorted-array", "leetcode/solutions/0005-longest-palindromic-string", "leetcode/solutions/0015-three-sum", "leetcode/solutions/0016-three-sum-closest", "leetcode/solutions/0018-four-sum", "leetcode/solutions/0021-merge-two-sorted-lists", "leetcode/solutions/0022-generate-parentheses", "leetcode/solutions/0023-merge-k-sorted-list", "leetcode/solutions/0026-remove-duplicates", "leetcode/solutions/0027-remove-element", "leetcode/solutions/0048-rotate-image", "leetcode/solutions/0054-spiral-matrix", "leetcode/solutions/0056-merge-interval", "leetcode/solutions/0059-spiral-matrix-II", "leetcode/solutions/0076-minimum-window-substring", "leetcode/solutions/0083-remove-duplicates-linkedlist", "leetcode/solutions/0086-partition-list", "leetcode/solutions/0092-reversed-linked-list-II", "leetcode/solutions/0115-distinct-subsequences", "leetcode/solutions/0123-best-time-buy-sell-stocks", "leetcode/solutions/0160-intersection-of-two-linked-lists", "leetcode/solutions/0167-two-sum-ii", "leetcode/solutions/0189-rotate-array", "leetcode/solutions/0200-number-of-islands", "leetcode/solutions/0206-reversed-linked-list", "leetcode/solutions/0207-course-schedule", "leetcode/solutions/0226-invert-binary-tree", "leetcode/solutions/0236-lowest-common-ancestor", "leetcode/solutions/0279-number-of-squares", "leetcode/solutions/0300-number-of-longest-increasing-subsequence", "leetcode/solutions/0303-range-sum-query", "leetcode/solutions/0304-range-sum-query-2D", "leetcode/solutions/0323-number-of-connected-component", "leetcode/solutions/0344-reverse-string", "leetcode/solutions/0354-russian-doll-envelope", "leetcode/solutions/0370-range-addition", "leetcode/solutions/0438-all-anagrams", "leetcode/solutions/0463-island-perimeter", "leetcode/solutions/0494-target-sum", "leetcode/solutions/0547-number-of-provinces", "leetcode/solutions/0567-permutation-in-string", "leetcode/solutions/0652-find-duplicate-subtrees", "leetcode/solutions/0695-max-area-of-island", "leetcode/solutions/0704-binary-search", "leetcode/solutions/0712-minimum-ascii-delete-sum", "leetcode/solutions/0713-subarray-product-less-than-k", "leetcode/solutions/0733-flood-fill", "leetcode/solutions/0743-network-delay-time", "leetcode/solutions/0797-all-paths-source-target", "leetcode/solutions/0886-possible-bipartition", "leetcode/solutions/1027-longest-arithemetic-subsequence", "leetcode/solutions/1109-flight-booking", "leetcode/solutions/1288-remove-covered-intervals", "leetcode/solutions/1514-path-with-maximum-prob", "leetcode/solutions/1584-min-cost-connect-all-points", "leetcode/solutions/1631-path-with-minimum-effort", "leetcode/solutions/1976-number-ways-arrive-destination", "notes/algorithm", "notes/algorithm/backtracking-algorithm", "notes/algorithm/bigO", "notes/algorithm/graph-algorithm", "notes/algorithm/recursive-algorithms", "notes/algorithm/search-algorithm", "notes/algorithm/sorting-algorithm", "notes/data-structure", "notes/data-structure/1-array", "notes/data-structure/10-dynamic-programming-II", "notes/data-structure/11-dynamic-programming-III", "notes/data-structure/12-dynamic-programming-IV", "notes/data-structure/13-backtracking", "notes/data-structure/2-linked-list", "notes/data-structure/3-stack-and-queue", "notes/data-structure/4-binary-search-tree", "notes/data-structure/5-binary-tree", "notes/data-structure/6-binary-search-tree-II", "notes/data-structure/7-heap", "notes/data-structure/8-graph", "notes/data-structure/9-dynamic-programming-I"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["basics/lectures.md", "basics/lectures/lecture01.md", "basics/lectures/lecture02.md", "basics/lectures/lecture03.ipynb", "basics/lectures/lecture04.md", "basics/lectures/lecture05.ipynb", "basics/lectures/lecture06.ipynb", "basics/lectures/lecture07.ipynb", "basics/lectures/lecture08.ipynb", "basics/lectures/lecture09.ipynb", "basics/lectures/lecture10.ipynb", "basics/lectures/lecture11.ipynb", "basics/lectures/lecture12.ipynb", "basics/lectures/lecture13.ipynb", "basics/overview.md", "convex-optimization/interior-point-method.ipynb", "convex-optimization/newton-method.ipynb", "intro.md", "leetcode/solutions.md", "leetcode/solutions/0001-two-sum.ipynb", "leetcode/solutions/0003-longest-substring.ipynb", "leetcode/solutions/0004-median-two-sorted-array.ipynb", "leetcode/solutions/0005-longest-palindromic-string.ipynb", "leetcode/solutions/0015-three-sum.ipynb", "leetcode/solutions/0016-three-sum-closest.ipynb", "leetcode/solutions/0018-four-sum.ipynb", "leetcode/solutions/0021-merge-two-sorted-lists.ipynb", "leetcode/solutions/0022-generate-parentheses.ipynb", "leetcode/solutions/0023-merge-k-sorted-list.ipynb", "leetcode/solutions/0026-remove-duplicates.ipynb", "leetcode/solutions/0027-remove-element.ipynb", "leetcode/solutions/0048-rotate-image.ipynb", "leetcode/solutions/0054-spiral-matrix.ipynb", "leetcode/solutions/0056-merge-interval.ipynb", "leetcode/solutions/0059-spiral-matrix-II.ipynb", "leetcode/solutions/0076-minimum-window-substring.ipynb", "leetcode/solutions/0083-remove-duplicates-linkedlist.ipynb", "leetcode/solutions/0086-partition-list.ipynb", "leetcode/solutions/0092-reversed-linked-list-II.ipynb", "leetcode/solutions/0115-distinct-subsequences.ipynb", "leetcode/solutions/0123-best-time-buy-sell-stocks.ipynb", "leetcode/solutions/0160-intersection-of-two-linked-lists.ipynb", "leetcode/solutions/0167-two-sum-ii.ipynb", "leetcode/solutions/0189-rotate-array.ipynb", "leetcode/solutions/0200-number-of-islands.ipynb", "leetcode/solutions/0206-reversed-linked-list.ipynb", "leetcode/solutions/0207-course-schedule.ipynb", "leetcode/solutions/0226-invert-binary-tree.ipynb", "leetcode/solutions/0236-lowest-common-ancestor.ipynb", "leetcode/solutions/0279-number-of-squares.ipynb", "leetcode/solutions/0300-number-of-longest-increasing-subsequence.ipynb", "leetcode/solutions/0303-range-sum-query.ipynb", "leetcode/solutions/0304-range-sum-query-2D.ipynb", "leetcode/solutions/0323-number-of-connected-component.ipynb", "leetcode/solutions/0344-reverse-string.ipynb", "leetcode/solutions/0354-russian-doll-envelope.ipynb", "leetcode/solutions/0370-range-addition.ipynb", "leetcode/solutions/0438-all-anagrams.ipynb", "leetcode/solutions/0463-island-perimeter.ipynb", "leetcode/solutions/0494-target-sum.ipynb", "leetcode/solutions/0547-number-of-provinces.ipynb", "leetcode/solutions/0567-permutation-in-string.ipynb", "leetcode/solutions/0652-find-duplicate-subtrees.ipynb", "leetcode/solutions/0695-max-area-of-island.ipynb", "leetcode/solutions/0704-binary-search.ipynb", "leetcode/solutions/0712-minimum-ascii-delete-sum.ipynb", "leetcode/solutions/0713-subarray-product-less-than-k.ipynb", "leetcode/solutions/0733-flood-fill.ipynb", "leetcode/solutions/0743-network-delay-time.ipynb", "leetcode/solutions/0797-all-paths-source-target.ipynb", "leetcode/solutions/0886-possible-bipartition.ipynb", "leetcode/solutions/1027-longest-arithemetic-subsequence.ipynb", "leetcode/solutions/1109-flight-booking.ipynb", "leetcode/solutions/1288-remove-covered-intervals.ipynb", "leetcode/solutions/1514-path-with-maximum-prob.ipynb", "leetcode/solutions/1584-min-cost-connect-all-points.ipynb", "leetcode/solutions/1631-path-with-minimum-effort.ipynb", "leetcode/solutions/1976-number-ways-arrive-destination.ipynb", "notes/algorithm.md", "notes/algorithm/backtracking-algorithm.ipynb", "notes/algorithm/bigO.ipynb", "notes/algorithm/graph-algorithm.ipynb", "notes/algorithm/recursive-algorithms.ipynb", "notes/algorithm/search-algorithm.ipynb", "notes/algorithm/sorting-algorithm.ipynb", "notes/data-structure.md", "notes/data-structure/1-array.ipynb", "notes/data-structure/10-dynamic-programming-II.ipynb", "notes/data-structure/11-dynamic-programming-III.ipynb", "notes/data-structure/12-dynamic-programming-IV.ipynb", "notes/data-structure/13-backtracking.ipynb", "notes/data-structure/2-linked-list.ipynb", "notes/data-structure/3-stack-and-queue.ipynb", "notes/data-structure/4-binary-search-tree.ipynb", "notes/data-structure/5-binary-tree.ipynb", "notes/data-structure/6-binary-search-tree-II.ipynb", "notes/data-structure/7-heap.ipynb", "notes/data-structure/8-graph.ipynb", "notes/data-structure/9-dynamic-programming-I.ipynb"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [3, 6, 8, 9, 10, 11, 12, 15, 16, 17, 20, 22, 24, 35, 39, 41, 44, 46, 54, 55, 57, 61, 62, 63, 65, 68, 69, 74, 75, 76, 77, 80, 82, 86, 91, 92, 93, 94, 96, 98], "0": [1, 3, 5, 6, 7, 8, 9, 10, 11, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 86, 88, 90, 91, 92, 93, 94, 96, 97], "00000": [21, 74], "0001": [42, 86], "0005": 86, "0015": [24, 25, 86], "0016": 86, "0018": 86, "0026": 86, "0027": 86, "0046": 90, "0048": 86, "0051": 90, "0054": 86, "0056": 89, "0059": 86, "006": 14, "0072": 98, "0076": 86, "0092": 91, "0114": 95, "0115": 98, "0167": 23, "0198": 88, "0200": 60, "0206": 91, "0207": 97, "0210": 97, "0213": 88, "0226": 95, "0235": 95, "0236": 95, "0261": 97, "0283": 86, "0297": 95, "03": 5, "0300": 87, "0303": 86, "0323": 97, "0337": 88, "0344": 86, "0354": [87, 98], "0370": 86, "0416": 98, "0474": 98, "0486": 88, "0494": 98, "0518": 98, "0567": 57, "0583": 98, "0646": 87, "0652": 95, "0673": 87, "0704": 86, "0712": 98, "0743": 97, "0785": 97, "0797": 97, "0877": 88, "0886": 97, "0986": 89, "0f": 55, "0th": 98, "1": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 88, 91, 94, 96], "10": [31, 32, 33, 34, 50, 55, 66, 71, 72, 74, 75, 76, 77, 82, 91, 92, 93, 98], "100": [24, 26, 29, 30, 32, 36, 37, 43, 58, 65, 66, 68, 76, 82, 92, 98], "1000": [21, 22, 24, 31, 39, 42, 59, 65, 73, 75], "10000": [24, 55], "100248": 77, "100376": 77, "10067": 77, "100691": 77, "1008": 93, "100906": 77, "101": [50, 65, 98], "1010": 1, "101268": 77, "101404": 77, "101576": 77, "101679": 77, "10187": 77, "10215": 77, "102334155": 98, "1027": 87, "1038": 93, "104": [19, 20, 24, 28, 29, 33, 41, 42, 49, 50, 51, 52, 57, 61, 64, 70, 71], "104252": 77, "104419": 77, "1049": 98, "105": [23, 35, 40, 41, 43, 51, 54, 55, 73], "105036": 77, "105136": 77, "105555": 77, "10563": 77, "105809": 77, "106": [21, 75, 76], "10669": 77, "107979": 77, "10824": 77, "109": [19, 20, 25, 77], "1092": 98, "1094": 86, "11": [19, 31, 32, 34, 42, 49, 52, 63, 75, 77, 98], "1109": 86, "111015": 77, "111360": 77, "11169": 77, "11255": 77, "1135": 97, "11388": 77, "1143": 98, "114616": 77, "114647": 77, "115": 65, "115420": 77, "115652": 77, "116": 65, "11647": 77, "116955": 77, "11701": 77, "11716": 77, "1173": 77, "117525": 77, "12": [5, 31, 32, 34, 49, 52, 58, 64, 71, 75, 77, 88, 92, 98], "120": 92, "121085": 77, "1218": 87, "12342": 77, "124384": 77, "12480": 77, "12823": 77, "1288": 89, "12915": 77, "13": [31, 34, 49, 68, 75, 77], "1303": 77, "130696": 77, "13366": 77, "13741": 77, "13871": 77, "13874": 77, "13925": 77, "14": [31, 34, 75, 77, 91], "14098": 77, "14139": 77, "1417576": 77, "14204": 77, "14208": 77, "14512": 77, "14593": 77, "14620": 77, "14961": 77, "15": [19, 31, 33, 34, 42, 69, 71, 72, 75, 77, 91, 93], "15003": 77, "15020": 77, "1514": 97, "15276": 77, "15356": 77, "15793": 77, "1584": 97, "16": [1, 2, 31, 34, 49, 58, 75, 77, 98], "16049": 77, "16080": 77, "16121": 77, "16257": 77, "16264": 77, "16296": 77, "1631": 97, "1644": 95, "16454": 77, "165": 75, "1650": 95, "166": 77, "16605": 77, "16646": 77, "167": 75, "1676": 95, "16767": 77, "17": [5, 71, 75, 77, 98], "18": [33, 50, 68, 75, 77, 98], "180": 31, "18351": 77, "18456": 77, "18686": 77, "18851": 77, "18988": 77, "19": [68, 75, 77, 98], "19264": 77, "19336": 77, "19472": 77, "1964": 87, "19678": 77, "19681": 77, "19761": 77, "19928": 77, "1_000_000_007": 77, "1e": 74, "1e4": 72, "1eaae": 91, "1th": 98, "2": [1, 3, 5, 8, 9, 10, 13, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 88, 94, 96, 98], "20": [31, 34, 59, 71, 72, 75, 77, 93, 98], "200": [25, 37, 52, 60, 77], "2000": [21, 46, 70, 71], "20130": 77, "2020": 14, "20485": 77, "20591": 77, "20630": 77, "20736": 77, "20899": 77, "21": 77, "216": [58, 67], "218922995834555169026": 82, "22": [5, 77, 98], "2207": 98, "22195": 77, "22303": 77, "22370": 77, "22424": 77, "2246": 77, "22527": 77, "22557": 77, "22988": 77, "23": 77, "231": [43, 65], "23259": 77, "23296": 77, "233": 88, "2339": 77, "2348": 77, "23499": 77, "23584": 77, "23742": 77, "2397": 77, "23992": 77, "24": [5, 77], "24031": 90, "24136": 77, "24767": 77, "25": [68, 72, 74, 77], "2500": 50, "25000": 74, "25028": 77, "25075": 77, "25190": 77, "25515": 77, "26": 77, "26189": 77, "26331": 77, "26336": 77, "26351": 77, "26568": 77, "26673": 77, "26888": 77, "26962": 77, "27": 77, "270": 31, "27123": 77, "27628": 77, "27863": 77, "27895": 77, "27901": 77, "27918": 77, "28": 77, "28155": 77, "28306": 77, "28347": 77, "2849": 77, "2852": 77, "28699": 77, "28892": 77, "28914": 77, "28927": 77, "29": 77, "29415": 77, "29520": 77, "2d": [31, 44, 55, 75, 76, 77], "2i": [8, 96], "2log": 93, "2n": 5, "2nd": 41, "3": [5, 13, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 84, 88, 91, 94, 98], "30": [68, 77, 91, 93, 98], "300": [36, 44], "3000": 23, "30000": 74, "30005": 77, "30143": 77, "30448": 77, "30461": 77, "30552": 77, "30641": 77, "30744": 77, "308": 77, "31": 77, "3106": 77, "31299": 77, "31415": 77, "31744": 77, "31787": 77, "31814": 77, "31998": 77, "32": [1, 5, 39, 77], "32225": 77, "32251": 77, "32557": 77, "3256": 77, "32560": 77, "32718": 77, "32776": 77, "33": 77, "33228": 77, "33552": 77, "3381": 77, "33812": 77, "34": 77, "34555": 77, "34689": 77, "34997": 77, "35037": 77, "35102": 77, "35115": 77, "35284": 77, "354224848179261915075": 82, "35926": 77, "36294": 77, "3632": 77, "36735": 77, "36848": 77, "36894": 77, "37256": 77, "37444": 77, "37823": 77, "37840": 77, "38": 75, "3807": 77, "38217": 77, "38678": 77, "3876": 77, "38981": 77, "39070": 77, "39150": 77, "39602": 77, "3968": 77, "3n": 93, "3rd": [14, 41], "3t_": 27, "4": [1, 2, 3, 5, 13, 16, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 58, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 88, 90, 91, 92, 94, 98], "40": [93, 98], "40072": 77, "40108": 77, "403": 65, "41024": 77, "41221": 77, "4130": 77, "4137": 77, "417": 65, "4176": 77, "41999": 77, "42": 5, "42029": 77, "42185": 77, "42238": 77, "42788": 77, "43": 71, "43118": 77, "433": 65, "44": [5, 68], "4405": 77, "4445": 77, "44477": 77, "45": [71, 72], "45037": 77, "45513": 77, "45661": 77, "4589": 77, "45922": 77, "46": 68, "46269": 77, "46434": 77, "46459": 77, "46816": 77, "47": 68, "47198": 77, "48386": 77, "48992": 77, "4929": 77, "49308": 77, "49613": 77, "49650": 77, "4th": 41, "5": [2, 3, 13, 16, 21, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 45, 46, 48, 50, 51, 52, 53, 55, 56, 59, 64, 66, 68, 71, 72, 74, 75, 76, 77, 80, 82, 88, 90, 91, 92, 93, 98], "50": [26, 30, 58, 63, 67, 93], "500": [28, 38], "5000": [45, 46], "50000": 21, "50165": 77, "50319": 77, "50458": 77, "50609": 77, "50771": 77, "50940": 77, "50946": 77, "51122": 77, "51392": 77, "5141": 77, "51603": 75, "51944": 77, "51960": 75, "52": 71, "5200": 77, "52102": 75, "52121": 75, "52394": 75, "52425": 77, "5258": 77, "52855": 77, "52906": 77, "53168": 77, "53493": 77, "53740": 77, "538": 93, "5393": 77, "53942": 77, "5433": 77, "54341": 77, "54486": 77, "54863": 77, "55": [72, 82], "5595": 77, "5598": 77, "56207": 77, "5622": 77, "5657": 77, "5668": 77, "567": 88, "56992": 77, "57300": 77, "57867": 77, "58": 68, "58453": 77, "58739": 77, "59": 68, "59375": 77, "59555": 77, "6": [3, 13, 14, 16, 19, 28, 31, 32, 33, 34, 38, 40, 41, 42, 43, 47, 48, 50, 52, 55, 57, 63, 66, 68, 71, 73, 75, 76, 77, 80, 91, 92, 93, 98], "60": [92, 93], "6000": 68, "60143": 77, "60176": 77, "60380": 77, "60557": 77, "60728": 77, "61": 68, "61123": 77, "61707": 77, "62159": 77, "6224": 77, "6229": 77, "62590": 77, "62898": 77, "6312": 77, "63408": 77, "6347247": 77, "63524": 77, "63827": 77, "6387": 77, "64": 1, "64012": 77, "64785": 77, "65": 68, "6532": 77, "65339": 77, "65741": 77, "65791": 77, "66112": 77, "6637": 49, "66780": 77, "67": 77, "67592": 77, "67816": 77, "67997": 77, "68": [68, 71, 77], "68188": 77, "68549": 77, "68961": 77, "69": 77, "69122": 77, "69622": 77, "69988": 77, "7": [3, 6, 13, 19, 31, 32, 34, 40, 42, 43, 47, 48, 50, 52, 55, 58, 68, 71, 75, 77, 80, 84, 88, 92, 93, 98], "70": [92, 93], "70139": 77, "70795": 77, "70943": 77, "7201": 77, "72378": 77, "72942": 77, "73249": 77, "7367": 77, "73749": 77, "73759": 77, "74": 68, "74067": 77, "74575": 77, "74717": 77, "75": 92, "75240": 77, "75348": 77, "75413": 77, "76": 68, "76910": 77, "77": 68, "77203": 77, "773": 77, "77531": 77, "77828": 77, "77925": 77, "78": 71, "78083": 77, "7821": 77, "78280": 77, "7840": 77, "78764": 77, "78847": 77, "79": 68, "79579": 77, "8": [2, 3, 13, 19, 25, 27, 31, 32, 33, 34, 40, 41, 48, 50, 52, 55, 71, 73, 75, 76, 77, 80, 91, 93], "80": [92, 93], "80061": 77, "80291": 77, "80677": 77, "80912": 77, "81": 68, "81388": 77, "81840": 77, "81918": 77, "8217": 77, "82396": 77, "82860": 77, "83": 71, "83169": 77, "83547": 77, "836": 77, "8364": 77, "84237": 77, "8429": 77, "84312": 77, "84583": 77, "84720": 77, "8499": 77, "85": 92, "85147": 77, "85455": 77, "85756": 77, "85886": 77, "86507": 77, "8666": 77, "87059": 77, "87540": 77, "8784": 77, "88458": 77, "89087": 77, "89552": 77, "89860": 77, "8f30d": 91, "9": [3, 11, 19, 31, 32, 34, 41, 42, 47, 49, 50, 55, 64, 66, 71, 75, 77, 80, 82, 88], "90": [31, 92], "90624": 77, "90871": 77, "91189": 77, "91679": 77, "91930": 77, "9236": 77, "92703": 77, "9335": 77, "94935": 77, "95311": 77, "96084": 77, "9611": 77, "9628": 77, "96f79": 90, "9725": 77, "9734": 77, "9737": 77, "98445": 77, "98567": 77, "99": [43, 68], "9922": 77, "99627": 77, "A": [1, 2, 3, 5, 6, 7, 8, 9, 10, 15, 20, 21, 26, 28, 35, 37, 41, 43, 44, 46, 49, 58, 60, 63, 65, 67, 69, 71, 76, 77, 80, 82, 84, 91, 92, 93, 94, 96, 97, 98], "AS": 3, "As": [10, 39], "At": [2, 51, 52, 65, 79, 88, 91], "Being": 6, "But": [5, 6, 9, 11, 46, 93, 97, 98], "By": 15, "For": [5, 9, 10, 16, 41, 42, 46, 49, 59, 62, 65, 86, 90, 92, 93, 97, 98], "If": [1, 2, 5, 6, 8, 9, 10, 11, 12, 15, 19, 25, 30, 35, 41, 44, 45, 46, 60, 63, 64, 65, 68, 74, 82, 88, 92, 93, 96, 97, 98], "In": [1, 2, 10, 15, 24, 40, 41, 61, 77, 92, 93, 98], "It": [29, 30, 46, 60, 79, 92, 93], "NOT": [6, 31], "No": [9, 11, 41, 58], "Not": 46, "One": [55, 58, 92, 93], "Or": 98, "Such": [6, 97], "The": [2, 3, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 54, 55, 57, 58, 63, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80, 84, 88, 90, 91, 92, 93, 96, 97, 98], "Then": [1, 5, 6, 29, 36, 40, 41, 46, 48, 92, 93, 97], "There": [6, 9, 25, 41, 43, 46, 59, 60, 69, 72, 74, 77, 92, 93, 97, 98], "These": 97, "To": [1, 5, 8, 24, 43, 46, 67, 93, 96, 98], "Will": 10, "_": [29, 30, 34, 39, 40, 65, 71, 75, 76, 77, 88], "__": 6, "_____": 6, "__eq__": 6, "__height1": 6, "__init__": [6, 8, 26, 28, 36, 37, 38, 41, 45, 47, 51, 53, 62, 75, 91, 92, 93, 94, 96, 97], "__len__": 6, "__ne__": 6, "__slots__": 6, "__str__": 92, "_add_left": 6, "_add_right": 6, "_add_root": 6, "_binari": 64, "_contain": 6, "_delet": 6, "_element": 6, "_left": 6, "_make_posit": 6, "_node": 6, "_parent": 6, "_replac": 6, "_right": 6, "_root": 6, "_size": [6, 92], "_valid": 6, "a_": 9, "aa": [22, 35], "ab": [24, 57, 61, 75, 77, 90], "aba": 22, "abab": 57, "abandon": 79, "abc": [20, 35, 57, 92, 98], "abcabcbb": 20, "abcd": 98, "abl": [1, 98], "about": [10, 46, 97, 98], "abov": [2, 6, 16, 24, 43, 44, 46, 49, 58, 68, 74, 75, 80, 84, 92, 93, 98], "absolut": [75, 76], "abstract": 92, "ac": [22, 98], "accept": 74, "access": [1, 2, 6, 14], "accessor": 6, "accord": 48, "account": 80, "accum": [51, 52], "accuraci": 15, "achiev": [6, 40, 65, 74], "actaulli": 98, "action": 69, "actual": [45, 98], "acw": 98, "acycl": [10, 69, 97], "ad": [5, 6, 7, 16, 42, 59, 69, 75, 91, 92, 93, 97], "adajac": 10, "add": [1, 2, 3, 6, 7, 9, 13, 19, 25, 42, 45, 46, 53, 55, 59, 63, 65, 68, 69, 70, 71, 75, 77, 79, 86, 88, 90, 91, 92, 93, 97, 98], "addit": [1, 3, 6, 8, 21, 72, 92, 96], "address": [1, 2, 41, 69, 93], "adj": [9, 10, 11, 13, 58, 67, 97], "adjac": [9, 10, 13, 44, 58, 63, 67, 88, 97], "adjacenct": 9, "adjacenet": 58, "adjacneci": 9, "admit": 5, "adobecodebanc": 35, "adt": 2, "advanc": [37, 84], "advantag": 6, "aforement": 67, "after": [2, 6, 8, 9, 21, 23, 29, 30, 37, 45, 46, 67, 69, 75, 90, 91, 93, 96, 97], "again": [20, 32, 40, 46, 91, 93, 97], "aggreg": 11, "agian": 19, "ahead": 45, "ai": [46, 70, 71], "aim": 97, "al": 14, "aleft": 21, "alert": 88, "algo": [90, 91], "algoithm": [1, 6], "algorithm": [2, 3, 5, 6, 7, 8, 10, 11, 14, 17, 19, 20, 24, 35, 41, 42, 46, 50, 52, 53, 60, 64, 68, 70, 74, 75, 76, 77, 79, 80, 82, 83, 84, 86, 90, 91, 92, 93, 96], "algorthm": 9, "algrithm": 80, "align": [15, 23, 98], "all": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 22, 23, 25, 27, 28, 30, 32, 33, 35, 36, 37, 41, 44, 46, 52, 53, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 73, 74, 79, 86, 89, 90, 91, 92, 96, 98], "alloc": [2, 29, 30, 31, 92], "allow": [1, 3, 5, 6, 11, 44, 45, 48, 79, 80], "allpath": 97, "allpathssourcetarget": 69, "almost": 15, "alogirhm": 5, "alon": 93, "along": [10, 31, 32, 34, 46, 88, 97, 98], "alreadi": [1, 6, 13, 19, 42, 46, 63, 67, 68, 80, 91, 97, 98], "also": [2, 6, 8, 10, 11, 15, 16, 22, 46, 53, 60, 67, 68, 80, 84, 88, 92, 93, 96, 97, 98], "altern": [8, 96], "although": [6, 11, 97], "alwai": [1, 8, 11, 13, 39, 45, 68, 92, 93, 96, 97, 98], "amorit": 5, "amount": [77, 88, 97, 98], "an": [1, 2, 3, 6, 7, 8, 9, 10, 11, 15, 16, 19, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 63, 64, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 86, 88, 90, 91, 96, 97, 98], "analysi": [1, 3, 11, 70, 92, 98], "analyz": 80, "ancessor": 6, "ancestor": [6, 7, 10, 93], "ani": [2, 9, 11, 19, 25, 30, 57, 62, 67, 69, 70, 75, 76, 77, 90, 93, 97, 98], "anim": 3, "annot": 9, "anoth": [19, 20, 29, 30, 31, 55, 69, 71, 73, 75, 80, 93, 97, 98], "answer": [11, 19, 20, 22, 25, 35, 39, 57, 63, 65, 72, 74, 77, 90], "anymor": 75, "anyth": [39, 93], "api": 2, "appar": [88, 98], "appear": [5, 6, 10, 29, 36, 53, 91], "append": [2, 3, 5, 8, 23, 25, 26, 27, 28, 32, 33, 36, 37, 38, 41, 43, 44, 45, 46, 47, 50, 51, 53, 55, 57, 58, 62, 63, 66, 67, 68, 69, 70, 74, 75, 76, 77, 79, 90, 91, 92, 93, 96, 97], "appi": 2, "appli": [2, 9, 15, 16, 46], "applic": [8, 96], "apporach": 93, "approach": [45, 46, 90, 93, 97], "appropri": 93, "approxim": [15, 16, 92], "approxmim": 15, "ar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 20, 25, 26, 28, 29, 30, 31, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98], "arbitrari": [3, 41], "arbitrarili": 1, "argument": 98, "aright": 21, "aris": 93, "arithmet": 1, "around": 58, "arr": [92, 93], "arr_sort": 93, "arrai": [1, 3, 6, 9, 19, 22, 23, 24, 25, 28, 29, 30, 33, 40, 42, 44, 46, 50, 51, 54, 55, 56, 57, 59, 64, 70, 71, 72, 73, 75, 76, 77, 84, 88, 90, 93, 98], "arrang": [15, 39, 93], "arrari": 2, "arri": 92, "arrya": 3, "articul": 97, "ascend": [7, 21, 28, 36, 50, 55, 64], "ascendingli": 98, "ascii": 54, "assign": [6, 10, 24, 29, 36, 59, 80, 92], "associ": [6, 8, 9, 15, 92, 96], "associt": 92, "assum": [1, 2, 3, 5, 6, 9, 11, 19, 21, 22, 24, 44, 53, 63, 88, 90, 93, 97, 98], "assumpt": 58, "asympotot": 1, "asymptot": 80, "attach": [45, 93], "attack": 90, "attirbut": 9, "attribut": [8, 11, 96], "augment": 93, "augument": [6, 7], "automat": 88, "auxiliari": 5, "avail": [90, 98], "averag": [2, 25, 80], "average_valu": 25, "avl": 6, "avoid": [32, 44, 68, 69, 93, 98], "awai": 2, "ax": [15, 16], "axi": 98, "b": [3, 5, 6, 15, 16, 20, 21, 24, 25, 35, 41, 42, 60, 73, 74, 80, 82, 92, 93], "ba": [57, 61, 91], "bab": 22, "babad": 22, "babgbag": 39, "bac": 57, "back": [2, 10, 46, 69, 90, 92, 93, 97], "background": 15, "backtrac": 90, "backtrack": [39, 69, 93, 97], "bad": [5, 82], "bag": [39, 98], "balanc": [6, 8, 92, 93, 96, 97], "ball": 39, "banc": 35, "bao": 90, "base": [1, 2, 3, 6, 8, 15, 23, 33, 39, 59, 62, 65, 72, 73, 82, 84, 88, 91, 92, 93, 94, 96, 97, 98], "basic": [1, 15, 17], "basket": 39, "bb": 22, "bbbb": 20, "bbbbb": 20, "bc": 92, "bcd": 92, "beati": 93, "beauti": 63, "becaus": [3, 5, 6, 19, 21, 23, 41, 45, 46, 55, 63, 66, 67, 68, 69, 75, 93, 94, 97, 98], "becausethelistclass": 80, "becom": 93, "been": [6, 10, 13, 46, 70, 91, 97, 98], "befor": [1, 2, 3, 6, 9, 10, 36, 37, 40, 41, 46, 59, 69, 84, 88, 92, 93, 97, 98], "begin": [6, 15, 20, 41, 91, 98], "beginn": 17, "behavior": [6, 10], "behaviour": 79, "being": [6, 7, 10, 29, 30, 88], "bellman": 11, "bellman_ford": 12, "belong": 6, "below": [39, 46, 93], "besid": 10, "best": [24, 97], "better": 76, "between": [5, 6, 10, 11, 15, 16, 22, 30, 45, 48, 51, 68, 71, 74, 75, 76, 77, 90, 92, 93, 97, 98], "beyond": [29, 30], "bf": [9, 11, 58, 63, 67, 69, 70, 74, 77], "bi": [46, 70, 71, 77], "bidirect": [68, 74, 77], "big": [24, 92], "binari": [1, 3, 5, 19, 21, 44, 50, 55, 62, 63, 82, 86], "binarytre": 6, "binrayr": 7, "birdai": 1, "birthdai": 1, "bit": [1, 2, 39, 93], "bitwis": 1, "black": [9, 10], "blacken": 10, "bleft": 21, "block": [1, 69, 80, 83, 84], "blue": [52, 67], "bm": 5, "bmatrix": 15, "bodi": 80, "book": [14, 17], "boolean": [12, 93], "both": [3, 6, 9, 26, 29, 35, 37, 48, 55, 65, 80, 88, 91, 92, 93, 97], "bottom": [8, 67, 76, 82, 93, 96, 98], "boud": 32, "bound": [1, 11, 32, 34, 91, 93], "boundari": [32, 34], "brach": 93, "branch": [5, 6, 7, 90, 93, 97], "breadth": [10, 67, 93, 97], "break": [41, 58, 67, 91], "bridh": 97, "bright": 21, "broken": 88, "browser": 92, "brute": [3, 22, 61, 79, 92], "bst": 6, "bt": 93, "build": [2, 3, 6, 24, 26, 28, 36, 37, 41, 46, 59, 68, 74, 75, 77, 79], "build_preord": 93, "buildbst": 93, "buildfromlevelorderseri": 94, "buildfrompreorderseri": [62, 94], "buildgraph": [46, 68, 75, 97], "built": [92, 94], "byte": 1, "c": [1, 3, 5, 6, 20, 24, 25, 31, 35, 44, 57, 58, 60, 61, 63, 67, 73, 77, 80, 92, 93, 98], "c1": 41, "c26da": 90, "cabl": 97, "calcul": [1, 6, 8, 46, 51, 52, 58, 60, 63, 74, 80, 92, 96, 97, 98], "calculatespan": 92, "call": [1, 2, 3, 7, 8, 10, 15, 51, 52, 69, 77, 91, 92, 93, 96, 97], "came": 97, "can": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 19, 20, 21, 23, 24, 30, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 55, 58, 59, 65, 69, 70, 71, 74, 75, 76, 77, 80, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98], "candid": 79, "canfinish": 46, "cannot": [5, 6, 25, 39, 40, 41, 48, 55, 62, 66, 68, 69, 70, 71, 79, 80, 93, 98], "capac": [2, 98], "card": 84, "care": 3, "career": 17, "case": [1, 2, 3, 5, 6, 7, 12, 13, 15, 39, 40, 46, 50, 55, 59, 61, 62, 65, 66, 67, 68, 84, 88, 91, 92, 93, 94, 97, 98], "cba": 57, "cbaebabacd": 57, "cbbd": 22, "cconstruct": 93, "cell": [44, 52, 58, 63, 71, 76, 77], "center": [22, 67], "certain": [88, 97], "ch": 92, "chain": 5, "chang": [7, 29, 30, 65, 67, 69, 71, 90, 91, 93], "chapter": 6, "char": [35, 61], "charact": [22, 35, 39, 54, 61, 65, 92, 98], "character": 15, "charect": [92, 98], "cheapili": 6, "cheapli": 6, "check": [1, 3, 8, 9, 35, 41, 46, 57, 61, 70, 75, 93, 96, 97], "checkpermut": 61, "chessboard": 90, "child": [6, 7, 8, 93, 96, 97], "childern": 6, "children": [6, 7, 8, 46, 93, 96, 97], "choic": [6, 15, 39, 59, 65, 88, 90, 97, 98], "choos": [6, 13, 88, 90, 97, 98], "chose": 98, "chosen": 88, "chunk": 2, "circular": 41, "citi": [60, 77], "class": [1, 2, 6, 8, 26, 28, 36, 37, 38, 41, 45, 47, 51, 52, 53, 62, 75, 91, 92, 93, 94, 96, 97], "classic": 6, "clean": 77, "clockwis": [31, 32, 34], "cloest": 92, "closest": [13, 92], "cluster": 97, "cn": 5, "code": [3, 24, 41, 45, 46, 49, 63, 68, 74, 75, 80, 84, 90, 91, 93, 97], "coinchang": 98, "col": [58, 76], "col1": 52, "col2": 52, "collect": [2, 9, 46, 77], "color": [9, 10, 58, 67, 70, 93, 97], "column": [31, 58, 76, 90], "com": [77, 93, 98], "comb": 79, "combin": [27, 37, 79, 82, 84, 93, 98], "combinatin": 79, "come": [19, 37, 43, 50, 84, 91, 93], "comlex": 80, "comment": 69, "common": 91, "commun": 68, "compact": 9, "compar": [3, 6, 33, 45, 73, 80, 91, 92, 93], "comparison": [1, 80], "compars": 5, "compil": 92, "complementari": 15, "complet": [8, 10, 39, 40, 58, 59, 93, 96], "complex": [2, 3, 19, 21, 23, 27, 42, 44, 49, 50, 52, 53, 55, 59, 64, 74, 77, 91, 92, 93, 98], "complexii": 42, "complic": 45, "compon": 97, "compress": [53, 97, 98], "comput": [2, 3, 6, 10, 14, 17, 79, 80, 92, 97, 98], "concaten": 59, "concis": 77, "concret": 6, "condit": [46, 67, 90], "confus": 3, "connect": [9, 10, 38, 41, 44, 46, 58, 60, 63, 67, 70, 74, 77, 88, 91, 92, 93], "conquer": [82, 84], "consecut": [2, 76, 92], "consid": [1, 6, 33, 67, 92, 93, 97, 98], "considerd": 80, "consist": [9, 11, 22, 35, 39, 57, 61, 65, 77, 80], "constant": [1, 2, 5, 42], "constitu": 11, "constraint": [2, 15, 39, 40, 49, 50, 55, 88], "construct": [3, 53, 70, 74, 77, 91, 92, 93, 98], "constructor": 6, "consum": [43, 75], "contact": 88, "contain": [1, 2, 3, 6, 8, 9, 10, 11, 23, 30, 46, 61, 92, 93, 96, 97], "containt": 9, "content": [93, 98], "contigu": 35, "continu": [2, 15, 23, 25, 46, 63, 69, 75, 77, 97, 98], "contribut": [58, 63], "control": 16, "convent": [6, 97], "conver": 92, "convers": [92, 93], "convert": [92, 98], "convertbttobst": 93, "convex": [15, 16], "coordin": 75, "copi": [69, 79, 90, 93], "copilot": 97, "cormen": 14, "corner": [52, 67], "correct": [3, 11, 46, 68, 74, 75, 92, 93, 97, 98], "correctli": [3, 93], "correspond": [8, 75, 92, 96], "cost": [2, 93], "could": [1, 5, 6, 10, 19, 35, 39, 43, 77, 79, 93, 97, 98], "count": [1, 6, 11, 35, 53, 57, 60, 61, 73, 75, 77, 80, 97], "counter": [23, 80], "counting_sort": 5, "countpath": 77, "cours": 14, "cover": 33, "creat": [6, 10, 41, 44, 45, 91, 93, 98], "critic": 97, "critical_edg": 97, "criticalconnect": 97, "cross": 10, "cur": [26, 28, 37, 38, 41, 45, 91, 92, 93, 98], "curr": [91, 92, 93], "curr_sum": [25, 59], "current": [20, 22, 23, 33, 35, 38, 39, 41, 45, 46, 48, 58, 59, 62, 68, 73, 75, 77, 80, 90, 91, 92, 93, 97, 98], "currentlength": 80, "cycl": [10, 11, 12, 41, 97], "cycledetect": 91, "cyclic": 11, "d": [2, 5, 6, 9, 10, 11, 12, 13, 20, 25, 32, 34, 65, 71, 73, 75, 77, 92, 97, 98], "da78c": 91, "dag": [46, 69, 70, 74, 77], "dag_shortest_path": 11, "dai": [40, 92], "daili": 92, "data": [3, 5, 8, 14, 17, 19, 80, 91, 92, 93, 96], "de": 98, "deal": [6, 68, 92], "decend": 24, "decid": [17, 93], "decis": [5, 6, 79], "decreas": [26, 29, 42, 46, 93, 97], "decreasingli": 89, "dectect": 41, "dee": 65, "deeper": 10, "def": [3, 5, 6, 8, 9, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 88, 90, 91, 92, 93, 94, 96, 97, 98], "defaultdict": [46, 77], "defin": [6, 9, 11, 15, 16, 22, 32, 34, 35, 40, 46, 48, 52, 59, 65, 70, 74, 88, 92, 93, 94, 97, 98], "definit": [8, 38, 45, 48, 51, 52, 96, 98], "degre": [31, 46], "delet": [2, 3, 6, 7, 8, 36, 71, 92, 96, 98], "delete_at": 2, "delete_first": 2, "delete_last": 2, "delete_max": [8, 96], "delete_min": 13, "delete_root": [8, 96], "deletemax": [8, 96], "deletemiddl": 92, "delta": [11, 16], "denomin": 98, "denot": [15, 75], "dens": 9, "depend": [1, 3, 6, 8, 9, 46, 80, 96, 97], "deprec": 6, "depth": [6, 93], "dequeu": [9, 13, 46, 97], "deriv": [6, 16, 71], "descend": [10, 48, 55, 93], "describ": 41, "design": [6, 21, 52], "desir": 98, "destin": [11, 97], "destroi": 45, "detach": 6, "detail": [6, 93], "detect": [11, 41, 46, 58, 91, 97], "determin": [5, 9, 13, 22, 57, 58, 61, 79, 80, 93], "determinist": 1, "df": [15, 44, 58, 60, 63, 67, 69, 70, 74, 76, 77, 90], "dfs_singl": 10, "dfs_sourc": 10, "di": [76, 90, 91], "diag": [15, 88], "diagnoal": 31, "diagon": [31, 58], "dicitionari": 87, "dict": 68, "dictionari": [5, 6, 46, 71, 97], "didn": [46, 97], "diff": 71, "differ": [3, 6, 7, 10, 15, 16, 41, 43, 48, 56, 57, 59, 69, 70, 71, 72, 74, 76, 80, 83, 84, 90, 92, 93, 97, 98], "differenti": [15, 16], "difficulti": 28, "digit": [5, 22], "dijkstra": [11, 68, 74, 75, 76, 77, 97], "dimens": 71, "direct": [9, 10, 13, 60, 68, 69, 74, 77, 92, 93, 94, 97], "direct_access_sort": 5, "direction": [63, 67], "directli": [1, 6, 15, 31, 60, 92, 94, 98], "directoin": 11, "disadvantag": 9, "disappear": 92, "discard": [92, 97], "discov": [9, 10], "discoveri": 97, "discovery_tim": 97, "disjoint": [10, 80, 97], "disjoint1": 80, "disjoint2": 80, "dislik": [70, 71], "dist": [68, 75, 77, 97], "dist_neighbor": 97, "distanac": 97, "distanc": [9, 11, 68, 74, 75, 76, 77, 97], "distance_neighbor": [74, 77], "distance_ni_nj": 76, "distinct": [5, 25, 75, 90], "distinctsubsequ": 39, "distinguish": 9, "distribut": 2, "disttoneighbor": 68, "divid": [48, 70, 71, 82, 84, 93, 98], "divis": 1, "divmod": 5, "dj": 76, "dll": 92, "dllnode": 92, "dlrow": 82, "do": [1, 8, 13, 29, 30, 31, 39, 40, 41, 43, 46, 48, 51, 52, 54, 58, 62, 63, 68, 70, 71, 90, 92, 93, 94, 96, 97, 98], "doe": [1, 6, 29, 30, 64, 70, 76, 98], "doesn": [2, 58, 93, 97], "doesnt": [3, 91], "dollenvelop": 98, "don": [58, 69, 77, 80], "done": [10, 19, 40, 46, 79, 93, 97, 98], "dont": [45, 46, 69, 97, 98], "doubl": 2, "doubli": 92, "down": [5, 8, 32, 34, 67, 76, 82, 88, 92, 93, 96, 98], "dp": [22, 39, 40, 49, 50, 55, 59, 65, 71, 87, 97], "dp_1": 98, "dp_2": 98, "dp_prev": 98, "draw": [3, 89, 98], "drop": 27, "du": 75, "due": [42, 55, 69, 79, 91, 93], "dummai": 45, "dummi": [26, 28, 36, 37, 41, 45, 91, 92], "dummy1": 37, "dummy2": 37, "duplic": [5, 20, 23, 24, 25, 27, 30, 35, 53, 59, 82, 86, 90, 93, 98], "dure": [7, 10, 11, 46, 69, 80, 92, 97, 98], "dynam": [3, 5, 7, 8, 22, 39, 43, 50, 55, 65, 82, 92, 93, 96], "e": [1, 2, 5, 6, 8, 9, 10, 11, 12, 13, 40, 51, 52, 54, 55, 58, 65, 67, 68, 69, 70, 76, 77, 88, 91, 92, 93, 96, 97, 98], "eacg": 31, "each": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 15, 16, 18, 19, 23, 24, 28, 29, 31, 36, 37, 41, 45, 46, 48, 50, 51, 52, 53, 58, 59, 62, 63, 66, 69, 70, 71, 72, 79, 80, 88, 90, 92, 93, 96, 97, 98], "earli": 74, "easi": [48, 60, 92, 93, 98], "easiest": 6, "easili": [8, 19, 92, 93, 96], "eat": 65, "edeg": 10, "edg": [10, 12, 13, 44, 53, 63, 68, 69, 74, 75, 97], "edit": [14, 65], "editor": 92, "edu": 14, "eet": 65, "effect": 6, "effici": [2, 3, 6, 8, 19, 86, 92, 96, 97, 98], "eidbaooo": 61, "eidboaoo": 61, "either": [3, 6, 9, 10, 63, 88, 92, 93], "el": 34, "elabor": 6, "electr": 14, "elemenet": 92, "element": [2, 3, 5, 6, 8, 15, 19, 21, 29, 31, 32, 34, 36, 42, 43, 44, 50, 51, 52, 55, 59, 69, 71, 80, 88, 91, 96], "elif": [3, 6, 8, 9, 21, 23, 24, 25, 42, 55, 64, 73, 77, 82, 91, 92, 93, 96, 97, 98], "elimin": 79, "elmenet": 6, "els": [1, 3, 6, 9, 11, 19, 20, 21, 22, 23, 24, 25, 26, 33, 35, 37, 38, 39, 41, 42, 49, 50, 55, 57, 58, 59, 61, 64, 65, 66, 68, 69, 70, 73, 75, 79, 82, 88, 91, 92, 93, 97, 98], "empti": [2, 6, 35, 38, 39, 41, 45, 68, 69, 77, 80, 92, 93, 97], "en": 3, "enabl": 70, "enclos": 92, "encount": 92, "encout": 92, "end": [2, 3, 5, 8, 10, 15, 33, 43, 56, 59, 65, 69, 72, 73, 74, 88, 89, 91, 92, 96, 97, 98], "endi": 33, "enforc": 2, "engag": 40, "engin": [14, 17], "english": [22, 35, 39, 57, 61, 65], "enlarg": [35, 86], "enough": [71, 82, 92, 97], "enqueu": [9, 46, 47, 68, 70, 74, 97], "ensur": [5, 69], "enter": 97, "entir": 35, "entranc": 41, "entri": [6, 80], "enumer": [19, 23, 24, 25, 75, 79], "epsilon": 16, "eqn": 16, "equal": [5, 8, 15, 37, 39, 46, 55, 59, 65, 88, 91, 92, 96, 97, 98], "equat": [15, 92], "equavel": 15, "equivel": 6, "equvel": 15, "error": 16, "estim": [11, 13], "et": 14, "etc": [9, 89, 93], "evalu": [16, 59, 92], "evaul": 92, "even": [5, 21, 22, 41, 92], "eventu": 2, "everi": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 35, 69, 74, 80, 91, 92, 93, 96, 97], "everyon": 70, "everyth": 93, "exabyt": 1, "exact": [8, 96], "exactli": [10, 19, 24, 42, 57, 58, 75], "examin": [10, 70, 92, 97], "exampl": [1, 2, 3, 5, 6, 10, 11, 12, 13, 40, 49, 50, 55, 80, 90, 92, 93, 97, 98], "exce": [28, 58], "except": [8, 45, 92, 96], "exectu": 80, "execut": [80, 92, 98], "exhaust": 2, "exist": [1, 2, 6, 9, 11, 12, 15, 19, 20, 64, 92], "exit": 70, "exp": 92, "expand": 66, "expans": 16, "expect": [1, 5], "expens": 6, "explan": [6, 19, 20, 21, 22, 24, 28, 29, 30, 33, 35, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 55, 57, 58, 59, 61, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 76, 77, 92, 98], "exploit": 5, "explor": [9, 10, 46, 57, 63, 74, 75, 77, 79, 93, 97], "exponenti": 3, "expr": 92, "express": [59, 93], "extactli": 98, "extend": [16, 62, 93, 94, 97], "extra": [2, 6, 29, 30, 42, 43, 44, 54, 92, 93], "extrac": 75, "extract": [75, 97], "extract_min": 97, "extrem": 7, "f": [6, 9, 10, 15, 16, 46, 82, 92, 93, 97, 98], "f_0": 15, "f_1": 15, "f_i": 15, "f_m": 15, "facili": 6, "factor": [1, 5, 16], "fail": 44, "fals": [12, 22, 35, 46, 60, 61, 70, 71, 80, 88, 90, 91, 92, 93, 97], "far": [6, 8, 11, 63, 88, 96, 97], "fast": [1, 5, 29, 30, 36, 41, 91, 98], "faster": [3, 5, 11, 79, 97], "feasibl": 15, "fewest": 98, "fi": 6, "field": [2, 6], "figur": 41, "fill": [2, 8, 34, 49, 55, 88, 96, 98], "final": [3, 10, 13, 29, 30, 38, 40, 79, 93], "financi": 92, "find": [3, 5, 6, 11, 12, 15, 19, 20, 21, 22, 24, 29, 30, 35, 36, 38, 40, 41, 42, 46, 48, 50, 55, 58, 63, 69, 71, 74, 75, 76, 79, 80, 87, 91, 92, 93, 98], "find_ancessor": 6, "find_ancestor_left": 6, "find_ancestor_right": 6, "find_first": 6, "find_last": 6, "find_max": 3, "find_max2": 80, "find_max_prefix": 3, "find_min": 3, "find_next": 3, "find_predecessor": 6, "find_prev": 3, "find_solut": 79, "find_subtree_first": 6, "find_subtree_last": 6, "find_successor": 6, "findanagram": 57, "findcirclenum": 60, "findcycleentr": 91, "findduplicatesubtre": 62, "findmiddl": 92, "finish": [9, 10, 46, 69, 92, 97], "first": [1, 2, 3, 5, 6, 8, 15, 16, 19, 21, 24, 26, 29, 30, 39, 41, 43, 45, 46, 48, 55, 58, 59, 67, 70, 71, 75, 79, 88, 92, 93, 96, 98], "first_i": 72, "firsti": 72, "firstli": 6, "fit": [39, 55], "five": [29, 30], "fix": [1, 2, 61, 69, 91, 93], "float": [21, 49, 68, 75, 76, 77, 93, 97, 98], "flood": 60, "floor": [8, 96], "flow": [58, 63], "floyd": 91, "focu": 97, "focus": 87, "foever": 67, "follow": [2, 3, 6, 11, 14, 15, 16, 27, 41, 43, 49, 50, 51, 52, 68, 69, 75, 80, 82, 84, 90, 92, 93, 97, 98], "forc": [3, 22, 61, 79, 92], "ford": 11, "forest": [10, 97], "forev": 67, "form": [27, 44, 57, 97], "formal": [6, 29, 30], "format": 94, "formul": [15, 41, 46, 88, 97], "forward": [3, 10, 15, 29, 30, 35, 36, 38, 45, 97, 98], "found": [1, 3, 6, 11, 20, 38, 62, 63, 79, 93, 97], "four": [44, 63, 77], "foward": 10, "frac": [8, 15, 16, 80, 96], "freq": 62, "frequenc": 62, "frequent": 86, "from": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 28, 30, 32, 34, 35, 38, 39, 41, 46, 53, 58, 61, 63, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 84, 88, 91, 92, 96, 97, 98], "front": [2, 10, 43, 91, 92], "full": 2, "fulli": 21, "fun_max2": 80, "funcat": 16, "function": [3, 11, 16, 27, 29, 30, 35, 39, 46, 53, 54, 59, 62, 64, 79, 80, 92, 93, 94, 97], "further": [6, 24, 46, 79, 97], "futur": [2, 9, 45], "g": [1, 2, 5, 6, 9, 10, 11, 12, 13, 16, 92, 93, 97], "ganrante": 97, "gather": 15, "gb": 1, "ge": [1, 2, 15, 24], "geater": 93, "gener": [6, 10, 12, 34, 35, 39, 42, 59, 61, 67, 77, 79, 82, 93, 94, 97], "generail": 92, "get": [3, 6, 8, 9, 16, 24, 28, 46, 48, 58, 62, 63, 65, 69, 71, 75, 77, 91, 92, 93, 96, 97, 98], "get_at": 2, "get_max": [8, 96], "get_num_adj": 58, "getheight": [8, 96], "getmax": [8, 96], "getmiddl": [91, 92], "getnfrombegin": 91, "getnfromend": 91, "github": [90, 91], "give": [5, 8, 46, 93, 96, 97, 98], "given": [1, 3, 6, 8, 9, 11, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 84, 86, 88, 90, 91, 92, 93, 94, 96, 97, 98], "global": [10, 46, 69, 70, 91, 93, 97], "globe": 6, "go": [6, 10, 11, 19, 46, 69, 70, 74, 77, 90, 93, 97, 98], "goe": [69, 88], "good": [3, 5, 75, 82, 91], "gradient": [15, 16], "grai": [9, 10], "grandchild": 93, "graph": [10, 12, 13, 68, 69, 70, 74, 75, 77], "great": 6, "greater": [2, 6, 21, 25, 33, 37, 43, 55, 73, 91, 93, 97, 98], "greatest": 3, "greedi": [13, 90, 97], "green": 52, "grid": [44, 58, 63, 67], "group": [60, 63, 70, 71, 92], "grow": [80, 97], "gt": 15, "guarante": [10, 36, 69, 93], "gui": 91, "h": [6, 7, 25, 54, 92, 93, 98], "ha": [1, 2, 3, 5, 6, 10, 15, 19, 35, 44, 45, 46, 48, 49, 67, 70, 71, 74, 75, 76, 80, 88, 91, 92, 93, 97, 98], "had": 6, "half": [3, 21, 55, 91, 92], "halt": 30, "halv": 3, "hand": [40, 97], "handl": [8, 51, 52, 93, 96], "hard": [6, 46], "hascycl": [46, 97], "hascycle_df": 46, "hash": [5, 19, 35, 41, 42, 57, 61, 91], "hashmap": 62, "hat": 15, "have": [1, 2, 3, 5, 6, 8, 13, 15, 16, 19, 24, 25, 29, 30, 31, 37, 41, 45, 46, 58, 59, 62, 67, 69, 70, 74, 79, 80, 88, 90, 92, 93, 96, 97, 98], "hea": 38, "head": [2, 26, 28, 36, 37, 38, 41, 45, 75, 91, 92, 93], "head_m": 91, "heada": 41, "headb": 41, "heap": [5, 28, 74, 75, 77], "heapifydown": [8, 96], "heapifyup": [8, 96], "heappop": [75, 77, 97], "heappush": [75, 77, 97], "heapq": [75, 77, 97], "heapsort": [8, 96], "height": [5, 6, 8, 55, 58, 76, 93, 96, 97, 98], "hello": 82, "help": [6, 8, 9, 10, 16, 17, 23, 92, 96], "helper": [35, 62, 91, 94, 98], "henc": [29, 30, 72, 92], "here": [0, 6, 14, 16, 19, 29, 30, 36, 45, 46, 50, 51, 52, 62, 66, 67, 69, 71, 79, 87, 92, 93, 95, 97, 98], "hessian": 15, "heurist": 77, "hi": [55, 88], "higher": [65, 92], "highest": [8, 88, 96], "hike": 76, "hiker": 76, "histori": 75, "hit": 93, "hold": [1, 2, 15, 29, 30, 98], "holder": 93, "hope": 76, "horizont": [10, 44, 58, 63, 97], "hors": 98, "how": [1, 2, 3, 5, 6, 7, 8, 9, 11, 21, 24, 28, 39, 41, 45, 46, 58, 61, 63, 74, 77, 88, 91, 92, 93, 96, 97, 98], "howev": [2, 6, 11, 45, 46, 71, 74, 77, 82, 97], "http": [3, 14, 77, 90, 91, 93, 98], "hui": 90, "humand": 92, "hypothesi": 1, "i": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97], "i_": 15, "id": 6, "idea": [1, 2, 3, 5, 6, 15, 19, 41, 80, 91, 92, 93, 98], "identifi": [46, 97], "ignor": 1, "ii": [23, 98], "imag": [58, 67], "immedi": [80, 92], "implememt": 13, "implement": [3, 8, 10, 20, 41, 44, 46, 51, 52, 63, 67, 69, 71, 75, 79, 91, 92, 93, 96, 97, 98], "implemnt": [83, 84], "impli": [5, 6], "import": [3, 6, 8, 10, 46, 49, 75, 77, 92, 93, 96, 97], "imposs": [29, 30, 46, 68], "improv": [2, 7, 11, 24, 44, 49, 80, 93], "includ": [1, 15, 35], "inclus": [51, 72], "incom": [46, 97], "incorretli": [46, 97], "increas": [3, 6, 7, 20, 55, 91, 92, 93, 97], "increasingli": [89, 93], "increment": 79, "ind": 93, "inddex": 92, "inde": 79, "indegre": [46, 70, 97], "independ": [1, 80, 98], "index": [2, 3, 5, 6, 8, 19, 21, 24, 35, 42, 57, 64, 71, 72, 74, 76, 80, 86, 87, 92, 93, 96, 98], "index1": 42, "index2": 42, "indic": [10, 12, 15, 19, 42, 46, 51, 57, 70], "indirect": 60, "indirectli": 60, "induct": [1, 3], "ineffici": [43, 51, 52], "inf": [49, 68, 75, 76, 77, 93, 97, 98], "infin": [9, 11, 21, 75, 97], "infinit": 98, "infixtopostfix": 92, "info": 93, "inform": [10, 46, 48, 93, 97], "infti": [11, 15], "inifin": 9, "initi": [2, 9, 10, 11, 13, 20, 35, 40, 45, 46, 51, 52, 61, 66, 67, 68, 75, 77, 80, 88, 91, 92, 93, 97, 98], "initialize_single_sourc": [11, 12, 13], "initialz": 9, "inner": [19, 27, 80], "inord": [6, 46, 97], "input": [1, 3, 5, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 91, 92, 93, 98], "inrod": 93, "inser": 92, "insert": [2, 5, 6, 7, 8, 10, 13, 89, 92, 96, 98], "insert_at": 2, "insert_first": 2, "insert_last": [2, 3, 5], "insert_sort": [3, 84], "insertaft": 91, "insertend": 91, "insertfront": 91, "insertion_sort": 3, "insid": [52, 55, 58, 80], "instanc": [6, 80, 82], "instanti": [6, 51], "instead": [2, 5, 29, 30, 45, 65, 75, 77, 93, 97, 98], "int": [49, 50, 51, 52, 62, 64, 71, 94], "integ": [1, 5, 6, 8, 10, 19, 23, 24, 25, 29, 30, 34, 38, 39, 42, 49, 50, 51, 52, 55, 59, 64, 67, 70, 71, 75, 77, 88, 90, 96, 98], "integr": 93, "intent": 98, "interest": 97, "interfac": 6, "intern": [3, 6], "intersect": [77, 80], "intersect1": 91, "intersect2": 91, "intersectionlist": 41, "intersectv": 41, "interview": 1, "inteview": 1, "intial": [75, 98], "intrac": 69, "introduc": [44, 93, 97], "introduct": [14, 42], "invalid": 6, "invers": 98, "invertbinarytre": 47, "involv": [6, 8, 96, 98], "io": [90, 91], "is_empti": 6, "is_leaf": 6, "is_root": 6, "is_sort": 3, "is_valid": 79, "isalpha": 92, "isbalanc": 92, "isconnect": 60, "isempti": 92, "isinst": 6, "island": [53, 60, 67], "isn": 58, "isoperand": 92, "isvalid": [8, 90, 96], "isvalidbipartitiongraph": 97, "isvalidbst": 93, "isvaliddag": 97, "isvalidsubset": 35, "item": [2, 3, 5, 6, 7, 8, 93, 96, 98], "iter": [3, 6, 15, 19, 20, 23, 45, 54, 65, 79, 80, 91, 92, 93, 97], "iter_ord": 3, "iter_seq": 2, "iterative_tree_search": 93, "itert": 16, "itertool": 3, "ites": 2, "ith": [40, 98], "its": [2, 6, 7, 8, 10, 11, 15, 20, 41, 44, 46, 47, 52, 58, 63, 64, 67, 69, 74, 77, 80, 91, 92, 93, 94, 96, 97, 98], "itself": [6, 46, 48, 49, 53, 97], "j": [3, 8, 9, 19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 34, 39, 40, 44, 46, 49, 50, 52, 55, 58, 59, 60, 63, 65, 67, 69, 71, 75, 76, 80, 82, 84, 88, 96, 98], "java": 69, "just": [5, 48, 82, 92, 93, 97], "k": [1, 2, 3, 5, 6, 8, 9, 11, 16, 21, 23, 24, 25, 29, 30, 40, 43, 68, 79, 96], "k1": 5, "k_1": 5, "k_2": 5, "keep": [46, 93, 97, 98], "kei": [3, 5, 6, 8, 13, 29, 30, 33, 35, 36, 46, 55, 62, 68, 69, 73, 75, 91, 93, 96, 97, 98], "kept": 29, "keyboardinterrupt": 77, "kind": [45, 62, 83, 84, 98], "knapsack": [59, 98], "know": [46, 48, 77, 80, 93, 97, 98], "known": [16, 80, 93, 97], "kruskal": 75, "ksum": 25, "kt": 2, "l": [3, 5, 20, 21, 25, 31, 32, 34, 42, 50, 54, 55, 64, 66, 80, 91, 93, 94], "l1": 91, "l10": 84, "l17": 84, "l2": [80, 91], "l20": 1, "l3": 80, "l4": 80, "l5": 80, "l6": 80, "l7": 80, "l8": 80, "l_max": 20, "label": [6, 46, 53, 58, 68, 69, 70, 72, 97], "labuladong": [90, 91], "lagorithm": 1, "lake": 58, "lambda": [15, 16, 33, 55, 73, 98], "lambda_i": 15, "land": [44, 58, 63], "languag": [9, 29, 30, 93], "larg": [1, 8, 15, 71, 75, 77, 96, 98], "larger": [1, 2, 3, 5, 7, 49, 50, 68, 74, 77, 97], "largest": [1, 3, 25, 35, 98], "last": [1, 3, 5, 6, 8, 15, 41, 55, 66, 69, 77, 91, 92, 96, 97, 98], "last_i": 72, "lastel": 92, "lasti": 72, "lastli": 93, "later": [6, 10, 11, 40, 45, 91, 93], "latest": 77, "layer": 69, "lca": 48, "le": [2, 5, 6, 15, 16], "lead": [3, 6, 7, 23, 24, 59, 69, 74, 79, 92, 93, 98], "leaf": [6, 62, 93], "learn": 17, "least": [1, 3, 5, 25, 43, 49, 70, 71, 93, 97], "leav": [5, 8, 13, 29, 30, 93, 96, 97], "lectur": [14, 96], "lee": 65, "leet": 65, "leetcod": [17, 18, 41, 44, 63, 77, 86, 87, 88, 90, 91, 93, 95, 97, 98], "left": [6, 7, 8, 10, 20, 21, 22, 24, 31, 32, 34, 35, 38, 46, 47, 48, 50, 51, 52, 55, 57, 61, 62, 64, 67, 76, 88, 91, 92, 93, 94, 96, 97], "left_max": 88, "leftmost": [50, 93], "len": [2, 3, 6, 12, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 35, 39, 40, 42, 43, 44, 50, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 80, 82, 84, 86, 88, 90, 92, 93, 97, 98], "lengh": 91, "lenght": 91, "length": [2, 3, 5, 6, 8, 9, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 39, 40, 42, 43, 44, 46, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 88, 96, 98], "lengthofli": 50, "less": [9, 19, 29, 35, 37, 46, 55, 84, 86, 92, 93, 97, 98], "let": [7, 16, 17, 42, 65, 93], "letter": [22, 35, 39, 57, 61, 65], "level": [8, 10, 46, 79, 92, 96, 97], "level_order_deseri": 93, "level_order_seri": 93, "level_r": 93, "level_stack": 93, "levelorder_travers": 47, "levelorderbottom": 93, "levelordertop": 93, "leverag": 3, "li": [73, 90, 93], "lifo": 92, "lighweight": 6, "like": [5, 6, 8, 45, 65, 70, 96, 97], "limit": [1, 49, 55], "line": [10, 46, 75, 77, 97], "linear": [6, 10, 82, 97, 98], "linearli": 80, "link": [10, 26, 28, 36, 37], "linked_list": [11, 38, 45], "linkedbinarytre": 6, "linkedlisttolist": [26, 28, 36, 37, 41, 91], "list": [3, 5, 6, 10, 21, 34, 43, 44, 46, 50, 51, 53, 66, 68, 69, 71, 73, 74, 75, 77, 80, 93, 97], "list1": 26, "list2": 26, "list_of_candid": 79, "list_to_linkedlist": [38, 45], "lista": 41, "listb": 41, "listnod": [38, 45], "local": 70, "locat": [1, 6, 30, 41], "log": [2, 5, 8, 15, 21, 50, 64, 74, 93, 96], "log_2": 1, "log_2n": 1, "logarithm": 80, "logic": [1, 46, 63, 97], "logn": [1, 2, 3, 5, 6, 7, 8, 80, 96], "logorithm": 15, "long": [1, 7, 10, 11, 58, 92, 98], "longer": [1, 2, 6], "longest": [11, 55], "longestarithemeticsubsequ": 71, "longestcommonsubsequ": 98, "longestincreasingsubsequ": 98, "look": [7, 93], "loop": [3, 19, 20, 24, 40, 43, 45, 46, 51, 52, 68, 69, 70, 75, 77, 80, 97], "lot": 5, "lower": [1, 11, 32, 52, 93], "lowercas": [35, 57, 61, 65], "lowest": [6, 8, 65, 93, 96, 97], "lowest_discovery_tim": 97, "lt": [24, 98], "m": [3, 5, 15, 21, 32, 35, 39, 41, 42, 44, 52, 58, 63, 64, 65, 67, 76, 98], "machin": [1, 17], "made": [26, 51, 52, 67, 91, 98], "mai": [3, 5, 6, 7, 12, 19, 24, 25, 30, 40, 42, 44, 45, 46, 57, 63, 70, 77, 88, 90, 92, 93, 97, 98], "main": [2, 6, 19, 35, 45, 46, 61, 75, 91, 97], "maintain": [1, 2, 5, 6, 7, 8, 11, 13, 20, 30, 46, 70, 80, 91, 92, 93, 96, 97], "maitain": [2, 6, 61], "make": [2, 3, 5, 6, 21, 29, 36, 39, 41, 46, 53, 59, 65, 71, 75, 84, 88, 91, 93, 97, 98], "makeup": [8, 96], "maks": 92, "manag": 80, "manhattan": [75, 77], "mani": [1, 2, 5, 6, 7, 8, 39, 43, 77, 79, 96, 98], "manipul": [2, 92], "manner": 82, "map": [1, 5, 11, 35, 41, 44, 46, 58, 61, 91], "map_": 35, "map_t": 35, "map\u91cc\u9762": 62, "mark": [9, 10, 46, 63, 97], "master": 3, "match": [1, 2, 39, 80, 91], "math": [8, 49, 77, 92, 96], "matrix": [31, 52, 60, 63, 97], "matter": [29, 30, 66], "max": [1, 3, 5, 6, 7, 8, 20, 21, 33, 40, 50, 55, 68, 71, 74, 76, 82, 88, 93, 96, 98], "max_area": 63, "max_heap": [8, 96], "max_heapify_up": [8, 96], "max_l": 80, "max_length": 20, "maxdist": 68, "maxenvelop": 55, "maximum": [3, 5, 8, 20, 21, 40, 55, 63, 68, 76, 80, 84, 88, 92, 96, 98], "maximum_recurs": 82, "maxprob": 74, "maxprofit": 40, "maxsiz": 92, "maxvalu": 98, "me": 17, "mean": [2, 6, 24, 31, 37, 58, 59, 69, 77, 80, 92, 93], "measur": 1, "median_index": 21, "meet": [20, 41], "meger": 3, "memeori": 2, "memo": [39, 59], "memoeri": 92, "memoiz": 82, "memori": [1, 2, 29, 30, 41, 54, 77, 91, 92], "merg": [5, 21, 97], "merge_sort": [3, 8, 96], "mergeinterv": 33, "mergeklist": 28, "mergetwolist": 26, "merhod": 41, "mess": 5, "met": [67, 90, 92], "method": [6, 8, 19, 20, 24, 41, 45, 46, 51, 52, 53, 54, 61, 71, 74, 77, 91, 96, 97, 98], "mid": [3, 50, 55, 91, 92], "middl": [6, 15, 21, 91, 92], "might": [6, 41, 46, 70, 97], "min": [3, 6, 8, 11, 13, 15, 21, 28, 49, 65, 68, 93, 96, 97, 98], "min_amount": 98, "min_coin": 98, "min_dist": 97, "min_length": 35, "min_x": 16, "mincostconnectpoint": 75, "mind": 97, "mindist": 98, "mineffort": 76, "minheap": 77, "minim": [6, 8, 96], "minimum": [7, 13, 16, 21, 24, 28, 68, 75, 98], "minimumdeletesum": 65, "minu": 7, "minut": 77, "minwindow": 35, "miss": 93, "mit": 14, "mix": 60, "mo": 91, "mode": 91, "model": [2, 97], "modif": 86, "modifi": [2, 5, 7, 11, 29, 30, 31, 44, 45, 54, 67, 86], "modifid": 15, "modulo": [1, 77], "moment": 97, "monei": [88, 98], "moodifi": 15, "more": [6, 29, 30, 58, 63, 68, 86, 88, 92, 93, 97], "morri": 93, "most": [1, 2, 5, 6, 7, 8, 40, 51, 52, 74, 77, 80, 93, 96], "mostli": 7, "move": [3, 17, 20, 22, 24, 29, 30, 32, 35, 36, 38, 44, 45, 50, 58, 64, 66, 76, 84, 91, 92, 98], "mst": 97, "mu": 15, "much": 79, "multip": 92, "multipl": [1, 5, 10, 40, 46, 51, 52, 68], "must": [1, 6, 7, 20, 23, 29, 30, 35, 40, 41, 42, 46, 52, 54, 63, 64, 92, 93], "my": 17, "n": [1, 2, 3, 5, 6, 7, 8, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 82, 87, 88, 92, 93, 96, 97], "n2": [19, 55], "n_l": 6, "n_node": 97, "nabla": [15, 16], "naiv": [6, 19, 21, 24, 42, 43, 80, 91, 93, 97], "name": [1, 6, 8, 80, 92, 96], "narrowli": 6, "navig": 6, "ndoe": 46, "ne": [1, 20], "nearli": [8, 96], "necessari": [3, 68, 98], "necessarili": 11, "need": [1, 2, 5, 6, 7, 8, 9, 19, 20, 21, 29, 30, 36, 43, 45, 46, 48, 57, 60, 62, 68, 69, 70, 71, 80, 84, 86, 88, 92, 93, 96, 97, 98], "neg": [5, 12, 43, 71, 87, 98], "negat": 11, "neighbor": [46, 53, 67, 68, 69, 70, 74, 75, 76, 77, 97], "neither": [6, 11], "neq": 80, "nest": 6, "networkdelaytim": 68, "new": [2, 6, 7, 51, 52, 67, 69, 84, 91, 92, 93, 97, 98], "new_head": 45, "newhead": [37, 45, 91], "newli": 93, "newnod": 91, "newton": 15, "nex": 79, "next": [2, 6, 8, 17, 26, 28, 36, 37, 38, 41, 44, 45, 90, 91, 93, 96], "next_candid": 79, "next_val": 91, "nextgreaterel": 92, "nextn": 91, "ni": 76, "night": 88, "nil": [9, 10], "nj": 76, "nlog": [74, 87], "nlogn": [1, 3, 5, 8, 23, 24, 55, 80, 96], "nod": 6, "node": [2, 3, 6, 7, 8, 26, 28, 36, 37, 38, 41, 45, 46, 47, 48, 53, 60, 62, 63, 67, 68, 69, 70, 74, 75, 77, 90, 92, 93, 94, 96, 97], "node1": [53, 75, 91, 97], "node2": [53, 75, 91, 97], "node3": 91, "node4": 91, "node5": 91, "node_v": 62, "node\u662f\u6700\u7b80\u5355\u7684\u5b50\u6811": 62, "non": [5, 24, 26, 29, 30, 33, 36, 42, 43, 67, 93], "nondecreas": 15, "nondupl": [29, 36], "none": [1, 5, 6, 11, 13, 26, 28, 36, 37, 38, 41, 45, 47, 62, 69, 91, 92, 93, 94, 97], "nonempti": 6, "nonloc": [59, 70, 88, 97], "nonneg": [11, 13, 97], "nonposit": 15, "nonpubl": 6, "normal": [8, 41, 88, 96, 98], "notat": [1, 80, 92], "note": [3, 8, 30, 35, 40, 41, 46, 55, 67, 69, 71, 72, 75, 91, 92, 93, 96, 97, 98], "noth": [40, 70, 97], "notic": [20, 23], "notimplementederror": 6, "notion": 80, "now": [80, 91, 93, 98], "np": 57, "npoint": 75, "ns1": 61, "ns2": 61, "nth": 91, "nu": 15, "null": [41, 48, 51, 52, 62, 93, 94], "num": [6, 19, 20, 21, 23, 24, 25, 29, 30, 34, 36, 42, 43, 50, 51, 55, 59, 64, 66, 71, 88, 90, 98], "num_adj": 58, "num_children": 6, "num_disjoint_set": 97, "num_island": 44, "num_land": 58, "numarrai": 51, "number": [1, 3, 5, 6, 7, 8, 11, 19, 21, 24, 25, 26, 36, 37, 38, 39, 41, 42, 45, 46, 55, 58, 59, 63, 66, 67, 71, 72, 73, 79, 80, 88, 90, 92, 93, 96, 97], "numberofconnectedcompon": 53, "numcours": 46, "numer": 16, "nummatrix": 52, "numner": 6, "nums1": 21, "nums2": 21, "nums3": 25, "numsquar": 49, "numsubarrayproductlessthank": 66, "o": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 19, 20, 21, 22, 23, 24, 29, 30, 35, 38, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 59, 64, 74, 77, 82, 87, 91, 92, 93, 96, 97, 98], "obj": 51, "object": [8, 51, 52, 69, 96, 97], "obtain": [8, 9, 25, 75, 93, 96], "obvious": 97, "occur": [2, 35, 61], "occurr": [30, 61, 79], "ocw": 14, "odd": [21, 22, 92], "oder": 6, "off": [7, 92], "offic": 97, "often": [8, 79, 96], "oh": 80, "old": [2, 6], "olleh": 82, "omega": [1, 5], "onc": [11, 29, 36, 46, 48, 57, 69, 93, 97, 98], "one": [2, 3, 5, 6, 7, 8, 9, 10, 19, 20, 21, 22, 24, 26, 28, 29, 30, 35, 36, 38, 39, 42, 45, 46, 55, 58, 59, 61, 62, 69, 74, 75, 77, 79, 88, 91, 93, 96, 97, 98], "onli": [1, 2, 5, 8, 11, 19, 20, 22, 29, 35, 36, 39, 42, 45, 46, 55, 58, 60, 62, 69, 70, 73, 77, 88, 92, 93, 96, 97, 98], "onto": 10, "oper": [1, 2, 3, 5, 7, 47, 50, 69, 80, 89, 92, 93, 97, 98], "operaiton": 7, "operand": 92, "operatpr": 92, "opposit": 97, "optim": [5, 13, 15, 16, 74, 88, 97], "optimizaiton": 15, "optimzi": 16, "optom": 16, "ord": 65, "order": [1, 2, 3, 5, 6, 7, 10, 16, 19, 24, 25, 26, 28, 29, 30, 32, 34, 36, 37, 42, 43, 46, 47, 48, 50, 55, 57, 62, 64, 66, 69, 71, 82, 88, 90, 91, 92, 97, 98], "org": 3, "orgin": [6, 15], "orig_color": 67, "origin": [15, 37, 44, 45, 57, 69, 75, 82, 91, 93, 94, 98], "originam": 98, "orign": [15, 45], "orignin": 98, "other": [3, 6, 7, 10, 11, 21, 23, 38, 41, 45, 49, 55, 60, 61, 70, 74, 77, 90, 92, 97, 98], "otherwis": [3, 6, 46, 48, 59, 60, 61, 64, 75, 90, 97], "our": 1, "out": [5, 8, 25, 32, 34, 41, 46, 57, 59, 91, 92, 96, 97, 98], "outdegre": 46, "outer": 80, "output": [1, 3, 5, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 88, 91, 92, 93, 97, 98], "outsid": 60, "over": [2, 6, 19, 20, 23, 80, 92, 97], "overal": [21, 74, 79], "overhead": [6, 92], "overlap": 33, "own": [5, 91], "p": [6, 8, 9, 10, 11, 22, 26, 37, 48, 57, 91, 96, 97], "p1": [26, 37, 41, 91], "p2": [26, 37, 41, 91], "p_map": 57, "pair": [1, 6, 11, 15, 19, 27, 46, 53, 68, 70, 71, 75, 76, 80, 92], "palidrom": 22, "palindrom": 86, "paradigm": 79, "param_1": 51, "paramet": [15, 46, 97], "parathesi": 92, "parent": [6, 8, 9, 10, 46, 53, 75, 93, 96, 97], "parentesi": 92, "parenthesi": 92, "part": [21, 29, 30], "partial": [79, 80], "particular": [3, 6, 15, 93, 97], "partit": 21, "partitionlist": 37, "pass": [6, 23, 25, 28, 41, 44, 48, 55, 84, 93, 94], "path": [6, 10, 12, 13, 46, 53, 59, 67, 68, 75, 77, 90, 93], "patienc": [50, 55, 87], "pattern": 24, "peopl": 70, "per": [2, 6, 80, 93], "perfect": 49, "perfectli": [6, 8, 96], "perform": [1, 6, 46, 50, 67, 91, 92, 93, 97, 98], "perim": 58, "permit": 98, "permuat": 3, "permulation_sort": 3, "permut": [5, 39, 57, 61], "permutation_sort": 3, "person": 70, "perspect": 1, "pesudo": [3, 84, 93], "phi": 15, "phrase": 57, "pile": 50, "pinter": 54, "pixel": 67, "place": [1, 3, 6, 8, 29, 30, 31, 36, 43, 44, 54, 79, 84, 86, 90, 92, 93, 96], "placehold": 93, "plai": [84, 88], "plan": 88, "plane": 75, "player": 88, "player1win": 88, "pleas": [92, 93], "plu": [67, 68, 93], "point": [2, 8, 16, 17, 30, 33, 41, 45, 46, 73, 91, 93, 96, 97], "pointer": [2, 3, 6, 8, 9, 19, 20, 21, 22, 24, 25, 29, 30, 35, 36, 37, 38, 41, 42, 44, 45, 54, 91, 92, 96, 98], "poker": 84, "polic": 88, "polynomi": 1, "pop": [8, 20, 34, 35, 36, 43, 46, 47, 53, 57, 61, 62, 67, 68, 69, 70, 74, 75, 76, 77, 79, 90, 91, 92, 93, 94, 96, 97], "pope": 92, "popmiddl": 92, "popped_item": 93, "popular": [8, 96, 97], "portion": [8, 96], "posit": [3, 5, 6, 34, 38, 67, 71, 91, 92], "possibil": 98, "possibl": [3, 5, 6, 8, 10, 46, 65, 69, 79, 80, 90, 92, 93, 96, 97], "possiblebipartit": 70, "possibli": [8, 96], "post": [46, 47, 48, 97], "postfix": 93, "postord": [46, 62, 91, 97], "ppinter": 7, "pq": 97, "pre": 98, "pre_sum": 51, "precalcul": [51, 52], "preced": [6, 92], "precis": [1, 63, 97], "predecessor": [6, 11], "prefer": 9, "prefix": [2, 3, 80, 84, 93], "prefix_average1": 80, "prefix_average2": 80, "prefix_max": 3, "preliminari": 92, "preorder": [46, 47, 62, 91, 97], "prepar": 76, "prepend": 43, "prerequisit": 46, "present": [6, 9, 41, 87, 91, 92, 97], "preserv": [5, 37, 93], "presum": [51, 52, 93], "pretti": 98, "prev": [26, 28, 37, 38, 41, 45, 91, 92, 93], "previou": [5, 8, 19, 33, 38, 45, 46, 69, 73, 90, 92, 93, 96, 97], "previous_ndo": 91, "previous_nod": 91, "price": [40, 92], "prim": 75, "primit": 80, "princip": 92, "principl": 93, "print": [3, 9, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 84, 88, 90, 91, 92, 93, 94, 97, 98], "print_linkedlist": [38, 45], "printabl": 54, "printtre": 93, "prioriti": [13, 28, 74, 75, 77, 92, 97], "priorityqueu": 97, "prob": 74, "probabl": 41, "problem": [1, 2, 5, 10, 11, 12, 13, 18, 50, 79, 80, 82, 86, 87, 88, 89, 93], "proce": 3, "procedur": [1, 3], "process": [6, 11, 92], "processor": 1, "prod": 66, "produc": [1, 11, 12], "product": [6, 49], "profession": 88, "profit": 40, "program": [9, 11, 22, 39, 50, 55, 65, 82, 92, 93], "progress": 79, "proof": 1, "proper": 6, "properti": [6, 8, 92, 93, 96], "propos": 11, "prove": [3, 16, 97], "provid": [1, 6, 9, 10], "psedocod": 9, "public": 6, "purpos": 97, "push": [75, 91, 92, 93], "put": [1, 9, 11, 39, 55, 70, 71, 90, 92, 97, 98], "puzzl": 90, "pwke": 20, "pwwkew": 20, "python": [2, 5, 14, 43, 54, 69, 77, 80, 97], "q": [9, 13, 48, 75, 90, 97], "qsize": 92, "quadrat": 80, "quadruplet": 25, "qualif": 15, "queri": 89, "question": [92, 93, 98], "queue": [9, 13, 46, 47, 53, 67, 68, 70, 74, 75, 76, 77, 93, 97], "quick": 5, "quickli": [6, 9, 28], "quot": 92, "ququ": 28, "r": [2, 3, 6, 20, 21, 25, 32, 34, 42, 44, 50, 54, 55, 58, 62, 63, 64, 66, 67, 82, 93, 97, 98], "r_i": 2, "r_t": 15, "rabbbit": 39, "rabbit": 39, "rais": [6, 92], "ram": [1, 2], "randint": 75, "random": [1, 75], "rang": [5, 8, 12, 19, 22, 25, 26, 31, 32, 34, 36, 37, 39, 40, 43, 44, 45, 46, 49, 50, 53, 55, 60, 63, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 86, 88, 90, 92, 93, 96, 97, 98], "rangeaddit": [56, 72], "rarr": 3, "rather": [80, 97], "ratio": 2, "re": [20, 22, 23, 25, 26, 27, 28, 32, 36, 37, 38, 41, 45, 47, 56, 57, 59, 62, 66, 69, 71, 72, 75, 82, 88, 90, 91, 93, 98], "reach": [3, 9, 32, 34, 59, 75, 77, 91, 97], "reachabl": [9, 11, 12, 97], "reacheabl": [10, 97], "read": [1, 5, 41], "real": [11, 15], "realiz": 69, "realli": 60, "realloc": 2, "rearrang": [57, 84], "reason": [9, 10, 44, 46, 69, 75, 93, 97, 98], "recalcul": 82, "receiv": 68, "recent": [77, 92], "reclaim": 2, "reconstruct": [56, 72, 93, 97], "record": [1, 10, 20, 35, 46, 62, 63, 68, 75, 80, 97], "rectangl": 52, "rectangular": 58, "recuris": 91, "recurr": 82, "recurs": [1, 3, 6, 7, 8, 9, 10, 27, 45, 46, 48, 67, 69, 79, 90, 91, 92, 93, 96, 97], "recus": [7, 45, 69, 93, 97, 98], "recuss": 82, "red": [52, 67], "reduc": [7, 11, 24, 88, 92, 98], "refer": [8, 41, 86, 96], "region": 52, "regularli": [8, 96], "rel": [6, 29, 30, 37], "relat": [19, 67, 68, 69, 86, 89, 98], "relationship": 27, "relax": [2, 12, 13], "reli": [13, 74], "relink": [2, 7], "remain": [3, 6, 21, 25, 59, 71, 73, 93], "rememebr": 5, "remov": [3, 6, 8, 23, 27, 35, 41, 43, 45, 46, 61, 69, 74, 75, 79, 86, 92, 93, 96, 97, 98], "removecoveredinterv": 73, "removedupl": [29, 36], "removeel": 30, "render": 80, "reorder": 84, "repeat": [3, 5, 46, 92, 97], "repeatedli": [13, 97], "repeatli": [58, 63, 93], "repet": 79, "replac": [6, 11, 15, 46, 67, 93, 98], "report": [11, 80], "repres": [1, 3, 5, 6, 7, 8, 9, 20, 31, 40, 44, 46, 55, 58, 59, 63, 67, 72, 73, 74, 75, 76, 87, 88, 91, 93, 96, 97, 98], "represent": [6, 92, 93, 94], "request": [2, 98], "requir": [1, 3, 5, 6, 7, 8, 9, 20, 23, 41, 42, 45, 46, 76, 80, 86, 88, 90, 93, 96, 97, 98], "requr": [8, 96], "res_inn": 27, "res_list": 62, "reserv": [2, 8, 72, 96], "resest": 45, "reset": 97, "residu": 15, "resiz": 2, "resourc": 1, "respect": [1, 21, 29, 35], "rest": [3, 21, 24, 75, 98], "restor": 97, "result": [13, 20, 29, 30, 42, 48, 59, 66, 69, 70, 75, 84, 90, 92, 93, 97, 98], "return": [1, 2, 3, 5, 6, 8, 9, 10, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 88, 90, 91, 92, 93, 94, 96, 97, 98], "reutrn": 97, "rev": [91, 92], "revers": [3, 11, 31, 43, 46, 82, 86, 88, 93, 97], "reversed_list": 45, "reversefrommton": 91, "reversen": 91, "reversesinglylinkedlist": 91, "reversestack": 92, "reversestr": 54, "revis": 98, "rewritten": [15, 16], "ri": 73, "right": [6, 7, 8, 10, 20, 21, 22, 24, 30, 31, 32, 34, 35, 38, 43, 47, 48, 50, 51, 52, 55, 57, 61, 62, 64, 67, 76, 84, 88, 91, 92, 93, 94, 96, 97], "right_max": 88, "rightarrow": 11, "rightmost": 93, "rigth": 93, "ro": 98, "road": [11, 77], "rob": 88, "robbibg": 88, "robe": 88, "root": [6, 8, 9, 47, 48, 53, 62, 69, 75, 93, 94, 96, 97], "root1": [53, 75, 97], "root2": [53, 75, 97], "rors": 98, "rose": 98, "rotat": [55, 93], "rotate90": 31, "roughli": 2, "rout": 76, "row": [31, 58, 76, 90, 98], "row1": 52, "row2": 52, "rtype": [50, 71], "ruin": 5, "rule": 16, "run": [2, 3, 5, 7, 8, 9, 10, 11, 21, 25, 35, 41, 50, 58, 67, 75, 80, 96, 97], "rune": 11, "runtim": 64, "s1": [61, 65], "s1_map": 61, "s2": [61, 65], "s2_map": 61, "s_map": 57, "safe": 92, "sai": 80, "said": 97, "same": [2, 3, 5, 6, 7, 8, 10, 15, 16, 19, 29, 30, 39, 40, 41, 42, 45, 46, 48, 49, 53, 61, 62, 63, 65, 67, 68, 69, 70, 71, 79, 80, 82, 88, 91, 92, 93, 96, 97, 98], "san": 90, "satisfi": [8, 15, 96], "save": [35, 38, 45, 77, 80, 93, 97, 98], "sc": [44, 58, 67], "scan": 92, "scenario": [2, 93], "scienc": [14, 17], "scientist": 17, "score": 88, "sea": 65, "search": [3, 7, 8, 19, 21, 24, 48, 50, 55, 59, 67, 79, 86, 96], "seat": 72, "seats_i": 72, "seatsi": 72, "second": [3, 5, 10, 16, 24, 41, 45, 70, 71, 79, 88, 91, 92, 98], "section": [87, 89, 97], "secur": 88, "see": [2, 3, 6, 46, 60, 63, 79, 91, 92, 93, 95, 97, 98], "seem": [5, 48, 68], "seen": [6, 44, 63, 91], "select": [5, 13, 65, 98], "selection_sort": [3, 84], "self": [6, 8, 26, 28, 36, 37, 38, 41, 45, 47, 51, 53, 62, 69, 75, 91, 92, 93, 94, 96, 97], "semant": 6, "send": 68, "sens": [46, 97], "separ": [5, 80], "seq": 71, "sequenc": [1, 3, 5, 7, 15, 19, 35, 67, 71, 80, 93, 97, 98], "seri": 92, "serial": 62, "serv": [92, 98], "set": [1, 2, 5, 8, 9, 10, 13, 15, 19, 20, 23, 35, 41, 46, 53, 63, 68, 70, 75, 80, 88, 91, 93, 96, 97], "set_at": 2, "sever": 6, "sh": 91, "shall": 93, "shape": [6, 7], "shift": [2, 3, 8, 96], "short": 92, "shortcom": 92, "shorter": 39, "shortest": [10, 12, 13, 21, 68, 74, 76, 77], "shortest_path": 9, "shortestpath": 97, "shou": 91, "should": [3, 5, 10, 21, 23, 24, 26, 29, 30, 35, 37, 46, 48, 65, 67, 70, 75, 84, 88, 91, 92, 93, 97, 98], "show": 7, "shown": [0, 39, 44, 80, 84, 97], "shrink": [20, 32, 34, 35, 61, 66, 86], "si": 92, "sibl": 6, "side": [58, 92], "sign": 39, "signal": 68, "signific": 5, "similar": [6, 9, 11, 24, 25, 28, 41, 57, 75, 84, 90, 92, 97, 98], "similari": 91, "similarli": [8, 9, 92, 96, 97], "simpl": [75, 80, 93, 98], "simpli": [2, 46, 92, 93, 97, 98], "simultan": 40, "sinc": [6, 7, 16, 19, 29, 30, 33, 35, 41, 48, 53, 77, 79, 80, 93], "singl": [1, 2, 5, 6, 10, 12, 13, 76, 92], "singlei": 91, "singleton": 97, "singli": [38, 41, 45, 92], "situat": 76, "size": [1, 2, 6, 8, 16, 21, 65, 70, 76, 79, 80, 82, 88, 92, 96, 97, 98], "skew": [7, 93], "skip": [23, 24, 25, 59, 65, 68, 75, 77, 97, 98], "skipa": 41, "skipb": 41, "slater": 15, "slice": [43, 93], "slide": [20, 35, 61], "slot": [29, 30], "slow": [29, 30, 36, 41, 75, 77, 91], "slower": 46, "small": [9, 82, 98], "smaller": [2, 3, 6, 21, 25, 46, 55, 77, 82, 92, 93, 97], "smallest": [3, 25, 50, 77, 97, 98], "so": [1, 2, 3, 5, 6, 7, 9, 10, 11, 15, 21, 36, 39, 41, 46, 63, 64, 65, 67, 69, 71, 84, 88, 91, 92, 93, 97, 98], "sol": 79, "sollut": 21, "solut": [12, 15, 16, 38, 49, 55, 69, 79, 82, 84, 90, 93, 97, 98], "solv": [1, 5, 10, 11, 12, 13, 15, 16, 19, 23, 39, 42, 43, 50, 53, 59, 74, 76, 77, 79, 80, 82, 86, 97, 98], "solvabl": 53, "solvequeen": 90, "some": [1, 5, 6, 11, 14, 29, 30, 35, 38, 45, 49, 60, 62, 70, 71, 75, 77, 79, 92, 93, 97], "sometim": 1, "soon": 79, "sophist": 6, "sort": [6, 19, 23, 24, 25, 29, 33, 42, 46, 50, 55, 64, 66, 73, 75, 80, 87, 89, 93, 98], "sou": 90, "sourc": [9, 10, 12, 13, 35, 46, 68, 97], "sovl": 80, "space": [2, 3, 5, 8, 9, 20, 21, 29, 30, 38, 42, 43, 44, 45, 55, 79, 86, 91, 92, 93, 96], "span": 75, "spars": 9, "speak": [89, 98], "speci": 6, "special": [3, 61, 67, 91], "specif": [1, 2, 6, 42, 93], "specifi": [1, 93], "speed": [6, 49, 91], "spiralord": [32, 34], "splice": 26, "split": [62, 70, 94], "spring": 14, "sqrt": 49, "squar": 58, "sr": [44, 58, 67], "src": 77, "ss": [62, 94], "stabil": 5, "stabl": 5, "stack": [91, 93], "stai": [2, 5], "stamp": 10, "star": 77, "start": [6, 8, 9, 20, 21, 22, 24, 30, 33, 35, 41, 46, 56, 57, 63, 67, 70, 72, 73, 74, 88, 89, 91, 92, 93, 96, 97, 98], "starti": 33, "stash": 88, "state": [10, 39, 40, 65, 66, 69, 87, 88, 97, 98], "statement": 46, "static": 3, "statisfi": 15, "statu": 22, "step": [3, 15, 22, 23, 24, 29, 30, 35, 36, 43, 45, 46, 66, 79, 91, 93, 97, 98], "still": [5, 6, 24, 46, 88], "stop": [24, 69, 88, 92], "stope": 16, "storag": 93, "store": [1, 2, 3, 5, 6, 7, 8, 9, 20, 22, 41, 44, 45, 46, 61, 62, 65, 67, 70, 71, 88, 91, 92, 93, 94, 96, 97, 98], "str": [22, 62, 92], "straight": [15, 97], "straightforward": 82, "straightfoward": 28, "strategi": [13, 97], "street": 88, "strictli": [15, 50, 89, 98], "string": [20, 35, 39, 61, 82, 92, 98], "stripe": 58, "strongli": 97, "structur": [3, 5, 7, 8, 10, 14, 62, 92, 93, 96, 98], "strucutur": [3, 17], "student": [1, 6], "su": 90, "sua": 90, "sub": [3, 93], "subclass": 6, "subject": 2, "subporblem": 97, "subproblem": [48, 59, 82, 90, 93, 98], "subsequ": [20, 55, 86], "subset": [25, 35], "substitut": 3, "substr": [22, 57, 86], "subtract": 1, "subtre": [6, 7, 47, 48, 93, 94], "subtree_at": 6, "subtree_augument": 6, "subtree_delet": 6, "subtree_find": 6, "subtree_first": 6, "subtree_insert": 6, "subtree_insert_aft": 6, "subtree_insert_befor": 6, "subtree_last": 6, "succ": 93, "succced": 92, "success": [1, 74], "successor": 6, "succprob": 74, "sucessor": 93, "suggest": 1, "sum": [3, 6, 9, 11, 28, 49, 75, 80, 86, 93, 98], "sum2_target": [23, 25], "sum3_target": 25, "sum_": [11, 15, 80], "summat": [51, 52, 86], "sumrang": 51, "sumregion": 52, "super": 98, "support": [1, 2, 6, 43, 92], "suppos": [5, 80, 97], "sure": [29, 36, 46, 93, 97], "surround": [44, 58, 63, 92], "swap": [3, 6, 8, 29, 30, 31, 36, 45, 47, 54, 84, 96], "swape": [8, 38, 45, 96], "symbol": 59, "symmetr": [6, 8, 96], "system": [2, 88], "t": [2, 3, 11, 15, 16, 35, 39, 46, 48, 58, 65, 69, 75, 77, 80, 93, 97], "t_": 27, "tab": 19, "tabl": [0, 5, 19, 39, 42, 49, 55, 61, 65, 68, 71, 75, 77, 87, 97], "tag": 16, "tail": [2, 38, 45, 91, 92, 93], "taila": 41, "take": [1, 2, 46, 68, 77, 88, 92, 93, 98], "taketim": 80, "target": [19, 20, 23, 24, 25, 35, 42, 64, 68, 97, 98], "targetsum": 59, "tarjan": 97, "task": 91, "taylor": 16, "techniqu": [2, 10, 89], "tell": [7, 9], "temp": [37, 93], "term": [1, 11, 97], "termin": [90, 97], "terminologi": [93, 94], "test": [11, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 84, 88, 90, 91, 92, 93, 94, 97, 98], "testcas": 35, "text": [11, 15, 16, 39], "text1": 98, "text2": 98, "tf_0": 15, "th": [2, 6, 8, 60, 88, 91, 96, 98], "than": [2, 3, 6, 7, 9, 19, 21, 25, 29, 33, 35, 37, 39, 43, 46, 50, 55, 68, 73, 76, 77, 79, 80, 84, 91, 92, 93, 97, 98], "thei": [3, 6, 8, 10, 19, 29, 30, 41, 42, 46, 62, 70, 91, 96, 97], "them": [6, 28, 33, 40, 53, 59, 60, 62, 69, 70, 71, 75, 82, 88, 97, 98], "theorem": 3, "theori": 16, "therefor": [8, 13, 15, 16, 42, 50, 67, 73, 80, 88, 93, 96, 97, 98], "theri": 92, "thesystem": 2, "theta": [1, 2, 3], "thi": [1, 3, 5, 6, 7, 8, 10, 11, 15, 16, 17, 19, 21, 23, 24, 28, 29, 30, 36, 39, 40, 41, 42, 43, 45, 46, 48, 50, 53, 54, 57, 59, 60, 65, 67, 69, 70, 72, 74, 75, 76, 77, 79, 80, 83, 84, 86, 87, 88, 89, 91, 92, 93, 96, 97, 98], "thing": [6, 71, 93], "think": [46, 80, 97, 98], "those": 67, "though": 68, "thousand": [51, 52], "thread": 92, "three": [6, 17, 43, 67, 74, 77, 80, 91, 92, 93, 98], "through": [5, 11, 19, 72, 77, 79, 97], "throw": 2, "thu": [5, 6, 16, 53, 70, 80, 93, 98], "tight": 1, "till": [38, 91, 92], "time": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 19, 20, 21, 23, 24, 35, 38, 42, 43, 45, 46, 49, 50, 51, 52, 53, 55, 59, 74, 75, 77, 86, 87, 91, 92, 93, 96, 97, 98], "timei": 77, "timestamp": 10, "tmp": 91, "toal": [46, 80, 97], "todo": [91, 97], "togeth": [1, 15, 26, 30, 41, 53, 91, 93], "toler": 16, "tonight": 88, "too": [5, 43, 75, 77], "top": [8, 10, 50, 76, 82, 88, 92, 93, 96, 98], "topmost": 92, "topolog": 46, "topological_sort": [10, 11, 97], "total": [5, 6, 17, 21, 23, 27, 46, 58, 60, 72, 80, 97, 98], "tow": 91, "toward": 17, "tp": 1, "tr": 25, "trace": [46, 97], "traceback": 77, "track": [46, 70, 93, 97], "transact": 40, "transfer": 69, "transform": [15, 23], "transit": [39, 88, 98], "trap": 93, "travel": [68, 76, 77, 93], "traver": [6, 46, 47, 93, 97], "travers": [6, 7, 10, 11, 21, 22, 32, 33, 34, 41, 46, 47, 48, 58, 62, 63, 70, 73, 74, 88, 90, 92, 98], "traverse_inord": 93, "traverse_postord": 91, "traverse_preord": 93, "treat": [46, 74, 77, 92, 97, 98], "tree": [3, 5, 9, 10, 11, 28, 46, 59, 62, 75, 90, 98], "treenod": 93, "treeuntil": 97, "triplet": 23, "true": [6, 12, 21, 35, 46, 60, 61, 70, 71, 80, 88, 90, 91, 92, 93, 97], "truncat": 16, "try": [3, 43, 79, 93], "tupl": 88, "turn": [8, 65, 88, 96, 97], "tv": 15, "twice": [15, 16, 19, 22, 42, 46, 93, 97, 98], "two": [1, 2, 3, 5, 6, 7, 8, 9, 10, 15, 20, 23, 24, 25, 29, 30, 35, 37, 38, 39, 40, 45, 48, 54, 57, 61, 62, 68, 69, 70, 71, 74, 75, 76, 77, 79, 88, 89, 90, 92, 93, 96, 97, 98], "two_sum": 19, "twosum": 25, "type": [3, 5, 10, 15, 50, 51, 52, 71, 74, 86, 92, 97], "typeerror": 6, "typic": [11, 16, 45, 48, 50, 53, 57, 65, 68, 86, 89, 90, 92, 97, 98], "u": [5, 9, 10, 11, 12, 13, 15, 31, 32, 34, 68, 70, 74, 75, 77, 79, 93, 97], "ub": 93, "udpat": 6, "uf": [53, 75], "ui": [68, 77], "umjt3j26t1i": 93, "un": 46, "unbalanc": 93, "unconstraint": 16, "under": 7, "underscor": [29, 30], "understand": [17, 46, 92, 93, 97], "undirect": [9, 10, 46, 70, 74, 77, 97], "undo": [59, 69, 90, 92, 97], "unexplor": [9, 10], "union": 75, "unionfind": [53, 75, 97], "uniqu": [5, 11, 15, 20, 25, 29, 35, 41, 46, 64, 68, 69, 70, 71, 73, 93], "unit": 11, "unlik": [15, 71], "unnecessari": 79, "unneed": 74, "unsolv": 98, "unsort": 3, "until": [6, 8, 9, 22, 30, 32, 34, 38, 68, 77, 91, 92, 93, 96, 97], "untravers": 98, "unvisit": 98, "unzip": 97, "up": [1, 3, 5, 6, 7, 8, 10, 11, 21, 32, 34, 42, 43, 50, 58, 67, 76, 82, 92, 93, 96, 97, 98], "upcom": 76, "updat": [7, 8, 9, 10, 11, 15, 16, 20, 35, 37, 45, 56, 57, 59, 62, 66, 68, 75, 77, 90, 92, 93, 96, 97, 98], "upon": [1, 6], "upper": [1, 11, 32, 34, 52, 93], "uppercas": 35, "us": [1, 3, 5, 6, 8, 10, 13, 14, 15, 16, 19, 20, 21, 24, 28, 29, 30, 36, 38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 80, 82, 86, 87, 88, 89, 90, 91, 96, 97, 98], "usabl": 11, "user": 2, "usual": [6, 8, 11, 15, 86, 91, 92, 96, 97, 98], "v": [9, 10, 11, 12, 13, 19, 38, 45, 68, 69, 70, 74, 75, 77, 93, 97], "v0": [11, 98], "v1": [11, 98], "v2": 11, "v_": 11, "v_i": 11, "v_node": [38, 45], "val": [26, 28, 30, 36, 37, 38, 41, 45, 47, 62, 75, 91, 92, 93, 94], "valid": [6, 19, 20, 22, 35, 79], "valu": [3, 5, 6, 8, 11, 12, 13, 19, 24, 25, 29, 37, 41, 44, 45, 46, 62, 63, 65, 67, 68, 71, 74, 75, 80, 84, 86, 91, 92, 93, 96, 97, 98], "valueerror": 6, "vanish": 16, "variabl": [20, 69, 70, 80, 97], "variat": 93, "vaue": 84, "ve": 12, "veri": [2, 57, 75, 80, 84, 86, 91, 92, 93, 97, 98], "veric": 10, "version": [15, 77, 97], "vertex": [10, 11, 12, 13, 70, 97], "vertic": [9, 10, 11, 13, 44, 58, 63, 97], "vetic": 13, "vi": [68, 77, 98], "via": 3, "video": 14, "view": [8, 10, 17, 46, 96, 97], "violat": 93, "visist": [46, 97], "visit": [41, 46, 53, 60, 68, 69, 70, 75, 91, 93, 97], "visual": 89, "vk": 11, "vlogv": 77, "vnext": 19, "w": [1, 2, 9, 11, 12, 13, 68, 75, 77, 93, 97, 98], "w0": 98, "w1": 98, "wa": [10, 91, 92, 97], "wai": [2, 5, 6, 7, 8, 9, 15, 28, 39, 43, 59, 70, 80, 91, 92, 96, 97, 98], "walk": [5, 6, 7, 41], "want": [1, 2, 5, 6, 16, 46, 55, 59, 70, 77, 80, 97, 98], "wast": 2, "watch": 93, "water": [44, 58, 63], "we": [1, 3, 5, 6, 7, 8, 9, 10, 11, 15, 16, 19, 20, 21, 23, 24, 25, 29, 30, 36, 39, 41, 42, 43, 44, 45, 46, 48, 51, 52, 55, 57, 58, 59, 60, 62, 65, 67, 68, 69, 70, 71, 74, 75, 77, 79, 80, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98], "web": 92, "weight": [9, 12, 13, 68, 74, 75, 76, 77, 98], "well": [11, 27, 36], "were": [5, 88, 92], "wether": [3, 7], "what": [1, 2, 5, 27, 29, 30, 43, 48, 68, 98], "when": [1, 5, 6, 8, 9, 10, 41, 45, 46, 48, 49, 60, 68, 69, 77, 84, 86, 87, 88, 91, 92, 93, 96, 97, 98], "whenev": 2, "where": [5, 7, 8, 11, 15, 33, 38, 39, 40, 42, 43, 46, 48, 51, 52, 55, 58, 60, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 92, 93, 96, 97, 98], "whereev": 93, "wherev": 10, "whether": [1, 8, 11, 12, 92, 96], "which": [1, 2, 3, 5, 6, 7, 8, 11, 12, 13, 15, 16, 23, 24, 31, 37, 39, 41, 43, 44, 45, 46, 57, 59, 64, 65, 68, 69, 74, 75, 76, 79, 80, 88, 91, 92, 96, 97, 98], "whichev": 88, "while": [3, 6, 9, 13, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 41, 42, 45, 46, 47, 49, 50, 53, 54, 55, 56, 57, 58, 60, 61, 64, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 84, 86, 90, 91, 92, 93, 97], "white": [9, 10], "whole": [19, 20, 58, 63, 80, 84, 93], "whose": [13, 15, 80, 84, 93, 97], "why": [2, 45, 46, 62, 68, 75, 98], "wi": [55, 68, 98], "width": [55, 58, 98], "wiki": 3, "wikipedia": [3, 48], "win": 88, "window": [20, 57, 66], "window_map": 20, "winner": 88, "wise": [31, 58], "wish": [76, 97], "within": [8, 35, 50, 52, 79, 80, 93, 96], "without": [1, 6, 7, 46, 71, 75, 79, 88, 93, 98], "wke": 20, "word": [1, 2, 41, 49, 57, 61, 92, 98], "word1": 98, "word2": 98, "work": [1, 13, 46, 52, 97], "world": 82, "worst": [2, 5, 6, 93], "would": [1, 16, 19, 24, 65, 92], "writabl": 45, "write": [1, 14, 27, 53, 54, 64, 92], "written": [5, 92], "wrong": [68, 69, 75, 84, 91, 93, 98], "wtih": 68, "wv": 98, "www": [93, 98], "x": [2, 3, 5, 6, 7, 15, 16, 31, 32, 33, 34, 37, 44, 46, 55, 58, 60, 63, 65, 67, 73, 75, 76, 80, 90, 91, 92, 93, 98], "x1": 75, "x_": 16, "x_0": 2, "x_1": 2, "x_i": 2, "x_k": 16, "x_n": [2, 16], "xi": 75, "xj": 75, "xk2": 5, "xxx": [10, 11, 97], "y": [6, 46, 75, 93], "y1": 75, "year": 17, "yellow": 58, "yet": [6, 9, 10, 70, 97], "yi": [75, 91], "yield": [6, 13, 97], "yj": 75, "you": [19, 24, 25, 26, 28, 29, 30, 31, 35, 37, 39, 40, 42, 43, 44, 46, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 67, 68, 69, 72, 74, 75, 76, 77, 88, 90, 92, 98], "your": [29, 30, 42, 51, 74, 77, 92], "youtub": 93, "z": 93, "zha": 90, "zhan": 91, "zoogeologist": 98, "zoologicoarchaeologist": 98, "\u03b8": 2, "\u4e0d\u7b26\u5408": 93, "\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u4e2d\u5e8f\u6216\u8005\u524d\u5e8f": 62, "\u4e3a\u6839\u7684\u5b50\u6811\u8282\u70b9\u5fc5\u987b\u6ee1\u8db3": 93, "\u4ec5\u9700\u8981\u4e0a\u4e00\u884cdp": 98, "\u4f46\u6ce8\u610f": 98, "\u4f7f\u7528\u4e86\u540c\u4e00\u884c\u7684\u503c": 98, "\u4f8b\u5982\u4f7f\u7528dp": 98, "\u5148\u770b\u539f\u67652d\u60c5\u51b5": 98, "\u5176\u5b9e\u8bf4\u767d\u4e86": 98, "\u5176\u6b63\u4e0a\u65b9\u7684\u503cdp": 98, "\u52bf\u5fc5\u4f1a\u7528\u5230dp": 98, "\u539f\u5730\u66f4\u65b01d\u6570\u7ec4\u95ee\u9898": 98, "\u53ef\u4ee5\u60f3\u8c61\u6210\u5728graph\u4e2d\u628a\u8be5\u8282\u70b9\u62b9\u53bb": [46, 97], "\u53ef\u4ee5\u628a\u540e\u5e8f\u904d\u5386\u5230\u7684\u5b50\u6811\u4ee5serial": 62, "\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u503c\u662f": 93, "\u540c\u6837": 98, "\u548c": 93, "\u56de\u5fc6\u539f\u67652d\u60c5\u51b5": 98, "\u56e0\u4e3a\u662f\u4ece\u540e\u5f80\u524d\u8fdb\u884c\u904d\u5386\u7684": 98, "\u56e0\u4e3a\u662f\u6b63\u5411\u904d\u5386": 98, "\u5728\u5f53\u524d\u8f6e\u6b21\u5df2\u7ecf\u88ab\u66f4\u65b0\u8fc7\u4e86": 98, "\u5728\u5f53\u524d\u8f6e\u6b21\u672a\u88ab\u66f4\u65b0": 98, "\u586b\u5145": 98, "\u5b58\u653e\u5728hash": 62, "\u5b9a\u4e49\u8be51d\u6570\u7ec4\u4e3aint": 98, "\u5bf9\u4e8e\u67d0\u4e00\u4f4d\u4f8b\u5982dp": 98, "\u5c31\u597d": 98, "\u5c31\u76f8\u5f53\u4e8e2d\u60c5\u51b5\u4e0b": 98, "\u5de6\u4e0a\u65b9\u7684\u503cdp": 98, "\u5e76\u8bb0\u5f55frequenc": 62, "\u5f53\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8ba1\u7b97\u7684dp": 98, "\u5f97\u51fa\u7684": 98, "\u610f\u601d\u662f\u6211\u4eec\u8981\u7b97\u5f53\u524ddp": 98, "\u6240\u4ee5\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a": 98, "\u6240\u4ee5\u5c31\u76f8\u5f53\u4e8e2d\u60c5\u51b5\u4e0b\u4f7f\u7528\u7684\u4e0a\u4e00\u884c\u7684\u503c": 98, "\u6765\u66f4\u65b0": 98, "\u6765\u66f4\u65b0dp": 98, "\u6b64\u65f6dp": 98, "\u73b0\u5728\u8003\u8651\u964d\u4e3a1d": 98, "\u73b0\u5728\u89e3\u91ca\u5bf91d\u6570\u7ec4\u8fdb\u884c\u53cd\u5411\u904d\u5386\u5373\u4ecedp": 98, "\u7684\u503c": 98, "\u7684\u503c\u90fd\u662f\u4f9d\u9760": 98, "\u7684\u66f4\u65b0": 98, "\u7684\u9650\u5236": 93, "\u80af\u5b9a\u4e0d\u6b63\u786e": 98, "\u82e5": 93, "\u884c\u7684\u503c": 98, "\u8bf4\u660e\u4e0d\u662f\u5408\u6cd5": 93, "\u8f93\u51fa\u6240\u4ee5frequency\u5927\u4e8e1\u7684\u5b50\u6811": 62, "\u8fd9\u6837\u8ba1\u7b97\u5c31\u662f\u6b63\u786e\u7684\u4e86": 98, "\u90a3\u4e48dp": 98, "\u90a3\u4e48\u5982\u679c\u5bf91d\u8fdb\u884c\u6b63\u5411\u904d\u5386\u5373\u4ecedp": 98, "\u90a3\u4e48\u8be5\u8282\u70b9\u6307\u5411\u7684\u5176\u4ed6\u8282\u70b9\u7684indegree\u5c31\u51cf1\u4e86": [46, 97], "\u90fd\u662f\u4ec5\u4f9d\u9760\u4e0a\u4e00\u884cdp": 98, "\u95ee\u9898": 62, "\u9650\u5b9a\u4ee5": 93, "\u9650\u5b9a\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\u662f": 93}, "titles": ["Lectures", "Lecture 1: Introduction", "Lecture 2: Data Structure and Dynamic Array", "Lecture 3: Set and Sorting", "Hashing", "Lecture 5: Linear Sorting", "Lecture 6: Binary Trees - I", "Lecture 7: Binary Trees - II", "Lecture 8: Binary Heap", "Lecture 9: Breadth-First Search", "Lecture 10: Depth-First Search", "Lecture 11: Weighted Shortest Path", "Lecture 12: The Bellman-Ford Algorithm", "Lecture 13: The Dijkstra\u2019s Algorithm", "Overview", "Interior-point Method", "Newton Iterative Method", "Introduction", "Solutions", "0001. Two Sum", "0003. Longest Substring without Repeating Characters", "0004. Median of Two Sorted Arrays", "0005. Longest Palindromic String", "0015. Three Sum", "0016. Three Sum Closest", "0018. Four Sum", "0021 Merge Two Sorted Lists", "0022 Generate Parentheses", "0023 Merge k Sorted Lists", "0026 Remove Duplicates", "0027 Remove Element", "0048 Rotate Image", "0054 Spiral Matrix", "0056 Merge Intervals", "0059 Spiral Matrix II", "0076 Minimum Window Substring", "0083 Remove Duplicates From Sorted List", "0086 Partition List", "0092. Reversed Linked List ii", "0115 Distinct Subsequences", "0123 Best Time to Buy and Sell Stock III", "0160 Intersection of Two Linked List", "0167. Two Sum II", "0189. Rotate Array", "0200. Number of islands", "0206. Reversed Linked List", "0207 Course Schedule", "0226. Invert Binary Tree", "0236 Lowest Common Ancestor of a Binary Tree", "0279 Number Squares", "0300 Longest Increaseing Subsequence", "0303 Range Sum Query", "0304 Range Sum Query - 2D", "0323 Number of Connected Component in an Undirected Graph", "0344. Reverse String", "0354 Russian Doll Envelope", "0370 Range Addition", "0438 Find All Anagrams in a String", "0463. Island Perimeter", "0494 Target Sum", "0547 Number of Provinces", "0567 Minimum Window Substring", "0652 Find Duplicate Subtrees", "0695. Max Area of Island", "0704. Binary Search", "0712 Minimum ASCII Delete Sum for Two Strings", "0713 Subarray with a product less than k", "0733. Flood Fill", "0733. Network Delay Time", "0797 All Paths From Source to Target", "0886 Possible Bipartition", "1027 Longest Arithmetic Subsequence", "1109 Flight Booking", "1288 Remove Covered Intervals", "1514 Path With Maximum Probability", "1584 Min Cost to Connect All Points", "1631 Path With Minimum Effort", "1976 Number of Ways to Arrive at Destination", "Algorithm", "Backtracking", "Big-O Complexity", "Graph algorithm", "Recursion", "Search", "Sort", "Data Structure", "Chapter 1. Array and String", "Dynamic Programming II", "Chapter 11. Dynamic Programming III", "Dynamic Programming IV", "Chapter 12. Backtracking", "Chapter 2. Singely Linked List", "Chapter 3. Stack", "Chapter 4. Binary Search Tree", "Cahpter 5. Binary Tree", "Chapter 6. Binary Search Tree II", "Chapter 7: Binary Heap", "Chapter 8. Graph", "Chapter 9. Dynamic Programming I"], "titleterms": {"": [13, 97], "0": 98, "0001": 19, "0003": 20, "0004": 21, "0005": 22, "0015": 23, "0016": 24, "0018": 25, "0021": 26, "0022": 27, "0023": 28, "0026": 29, "0027": 30, "0048": 31, "0054": 32, "0056": 33, "0059": 34, "0076": 35, "0083": 36, "0086": 37, "0092": 38, "0115": 39, "0123": 40, "0160": 41, "0167": 42, "0189": 43, "0200": 44, "0206": 45, "0207": 46, "0226": 47, "0236": 48, "0279": 49, "0300": 50, "0303": 51, "0304": 52, "0323": 53, "0344": 54, "0354": 55, "0370": 56, "0438": 57, "0463": 58, "0494": 59, "0547": 60, "0567": 61, "0652": 62, "0695": 63, "0704": 64, "0712": 65, "0713": 66, "0733": [67, 68], "0797": 69, "0886": 70, "1": [1, 45, 46, 86, 87, 90, 92, 93, 97, 98], "10": 10, "1027": 71, "11": [11, 88], "1109": 72, "12": [12, 90], "1288": 73, "13": 13, "1514": 74, "1584": 75, "1631": 76, "1976": 77, "2": [2, 45, 86, 87, 90, 91, 92, 93, 97], "2d": 52, "3": [3, 87, 90, 92, 93, 97], "4": [87, 93, 97], "5": [5, 87, 94, 97], "6": [6, 95, 97], "7": [7, 96, 97], "8": [8, 97], "9": [9, 98], "The": [12, 13], "With": [74, 76], "about": 95, "abstract": 6, "access": 5, "acycl": 11, "addit": 56, "adjanc": 9, "algorithm": [1, 12, 13, 78, 81, 97], "all": [57, 69, 75, 93, 97], "amort": 2, "an": [53, 92, 93], "anagram": 57, "analysi": [2, 5, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 72, 73, 74, 75, 76, 77, 88, 93], "ancestor": [48, 95], "ani": 6, "applic": [6, 93], "area": 63, "arithmet": [71, 87], "arrai": [2, 5, 8, 21, 43, 86, 92, 96], "arriv": 77, "ascii": 65, "attribut": 9, "avl": [7, 93], "backtrack": [59, 79, 81, 90], "balanc": 7, "barrier": 15, "base": 5, "bellman": 12, "best": 40, "bf": [46, 53, 81, 97], "big": 80, "binari": [6, 7, 8, 47, 48, 64, 83, 87, 93, 94, 95, 96], "bipartit": [70, 97], "black": 93, "blanc": 92, "book": 72, "bound": 5, "breadth": 9, "bst": 93, "bubbl": 84, "bui": 40, "build": [91, 93, 94, 97], "cahpter": 94, "can": 93, "case": 82, "central": 15, "chang": 98, "chapter": [86, 88, 90, 91, 92, 93, 95, 96, 97, 98], "charact": 20, "check": [91, 92], "closest": 24, "code": 79, "coin": 98, "collect": 92, "common": [48, 95, 98], "comparison": 5, "complet": 98, "complex": 80, "compon": 53, "comput": [1, 7], "condit": 15, "connect": [53, 75, 81, 97], "constant": 80, "constrain": [15, 16], "constraint": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "convert": 93, "correct": 1, "cost": 75, "count": [5, 84], "cours": 46, "cover": 73, "crietia": 16, "cubic": 80, "cycl": [46, 81, 91], "d": 86, "daa": 5, "dag": [11, 97], "data": [2, 6, 85], "decrement": 16, "dection": 91, "delai": 68, "delet": [65, 89, 91, 93], "depth": [10, 97], "dequ": 92, "deseri": [93, 95], "destin": 77, "df": [10, 46, 53, 81, 97, 98], "diff": 86, "differ": 87, "dijkstra": 13, "direct": [5, 11, 46], "distanc": 98, "distinct": 39, "divid": 91, "doll": [55, 87, 98], "doubl": 92, "dp": [88, 98], "dual": 15, "duplic": [29, 36, 62], "dynam": [2, 6, 59, 87, 88, 89, 98], "edg": [9, 11], "edit": 98, "effici": 1, "effort": 76, "element": [30, 92, 93], "entranc": 91, "envelop": [55, 87, 98], "equal": 16, "exampl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79], "exponenti": 80, "express": 92, "extern": 93, "fast": 86, "fibonacci": [82, 83, 98], "fill": 67, "find": [16, 53, 57, 62, 97], "first": [9, 10, 91, 97], "flight": 72, "flood": 67, "follow": [19, 38, 45, 46, 47, 54], "followup": [35, 43, 57, 61], "ford": 12, "format": 93, "four": 25, "from": [36, 69, 93, 94], "fucntion": 15, "function": [15, 88, 98], "game": 88, "gener": 27, "given": 87, "graph": [9, 11, 46, 53, 81, 97], "greater": 92, "hash": 4, "heap": [8, 84, 96], "height": 7, "hous": 88, "i": [6, 46, 93, 98], "ii": [7, 34, 38, 42, 87, 95], "iii": [40, 88], "imag": 31, "implement": [6, 9, 84], "increas": [50, 87, 98], "index": 91, "inequ": 15, "infix": 92, "inord": [93, 94], "insert": [3, 84, 91, 93], "interfac": [2, 3], "interior": 15, "intersect": [41, 89, 91], "interv": [33, 73, 89], "introduct": [1, 17, 82], "invert": 47, "island": [44, 58, 63], "iter": [16, 84], "iv": 89, "k": [28, 66], "kkt": 15, "kruskal": 97, "lectur": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "left": 86, "length": 91, "less": 66, "level": [93, 94], "lifoqueu": 92, "linear": [5, 80, 83], "link": [2, 6, 38, 41, 45, 91, 92], "list": [2, 9, 26, 28, 36, 37, 38, 41, 45, 91, 92], "log": 80, "logarithm": 15, "logorithm": 80, "longest": [20, 22, 50, 71, 87, 98], "loop": 91, "lower": 5, "lowest": [48, 95], "m": 91, "map": 93, "matrix": [9, 32, 34, 86], "max": 63, "maximum": [74, 82, 93], "median": 21, "meet": 89, "memo": [88, 98], "memoiz": 98, "merg": [3, 26, 28, 33, 84, 89, 91], "method": [15, 16, 92, 93], "min": 75, "minim": [15, 16], "minimum": [35, 61, 65, 76, 81, 82, 93, 97], "model": [1, 5], "modifi": 15, "n": [80, 90, 91, 98], "naiv": 98, "neg": 11, "network": 68, "newton": 16, "next": 92, "node": 91, "non": 89, "number": [44, 49, 53, 60, 77, 82, 87, 98], "o": 80, "oper": [6, 8, 96], "optim": 98, "order": [93, 94], "overlap": 89, "overview": [10, 11, 12, 13, 14], "pack": 98, "pair": 97, "palindrom": [22, 91], "parenthes": [27, 92], "partit": 37, "path": [9, 11, 15, 69, 74, 76, 81, 97], "perimet": 58, "permut": [3, 90], "point": [15, 75], "pointer": 86, "possibl": 70, "postfix": 92, "postord": [93, 94], "predecessor": 93, "prefix": 92, "preorder": [93, 94], "presum": 86, "prim": 97, "primal": 15, "prioriti": [8, 96], "probabl": 74, "probelm": 16, "problem": [15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 90, 92, 97, 98], "product": 66, "program": [59, 87, 88, 89, 98], "provinc": 60, "purpos": 14, "python": [6, 92], "qudrat": 80, "queen": 90, "queri": [51, 52], "question": 84, "queue": [8, 92, 96], "quick": 84, "radix": 5, "rang": [51, 52, 56], "recurr": 3, "recurs": [82, 84, 98], "red": 93, "refer": 90, "relax": 11, "remov": [29, 30, 36, 73], "repeat": 20, "repres": 11, "represent": 9, "resourc": 14, "revers": [38, 45, 54, 91, 92], "review": [5, 6, 7], "right": 86, "robber": 88, "room": 89, "root": 16, "rotat": [7, 31, 43, 86], "rrepresent": 9, "russian": [55, 87, 98], "schedul": 46, "search": [6, 9, 10, 64, 83, 87, 91, 93, 95, 97], "select": [3, 84], "sell": [40, 88], "sequenc": [2, 6], "serial": [93, 94, 95], "set": [3, 6], "shortest": [9, 11, 81, 97], "sing": 91, "singl": [11, 97], "slide": 86, "slow": 86, "solut": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 72, 73, 74, 75, 76, 77], "some": [82, 84], "sort": [3, 5, 8, 10, 21, 26, 28, 36, 81, 84, 91, 96, 97], "sourc": [11, 69], "space": 98, "span": [81, 92, 97], "special": 92, "spiral": [32, 34, 86], "squar": 49, "stack": 92, "standard": [92, 93], "static": [2, 6], "step": 16, "stitch": 89, "stock": [40, 88, 92], "stop": 16, "string": [22, 54, 57, 65, 86], "structur": [2, 6, 85], "subarrai": 66, "sublist": 83, "subsequ": [39, 50, 71, 87, 98], "substr": [20, 35, 61], "subtre": 62, "successor": 93, "sum": [19, 23, 24, 25, 42, 51, 52, 59, 65], "summari": 3, "tabl": [88, 98], "target": [59, 69], "techniqu": 86, "templat": 90, "terminologi": 6, "than": 66, "theori": 88, "thought": 95, "three": [23, 24], "tim": 84, "time": [40, 68, 80], "tool": 93, "topolog": [10, 81, 97], "travers": [86, 91, 93, 94, 95, 97], "tree": [6, 7, 8, 47, 48, 81, 84, 93, 94, 95, 96, 97], "tupl": 5, "two": [19, 21, 26, 41, 42, 65, 86, 91], "type": 6, "unconstrain": 16, "undirect": 53, "union": [53, 97], "up": [19, 38, 45, 46, 47, 54], "us": [92, 93], "v": 2, "valid": [93, 97], "variant": 11, "vertex": 9, "video": 89, "wai": [77, 93], "weight": [11, 97], "what": 46, "which": 93, "whole": 91, "window": [35, 61, 86], "without": 20}})